[{"F:\\react-projects\\sakar\\frontend\\src\\index.js":"1","F:\\react-projects\\sakar\\frontend\\src\\App.js":"2","F:\\react-projects\\sakar\\frontend\\src\\store.js":"3","F:\\react-projects\\sakar\\frontend\\src\\containers\\Activate.js":"4","F:\\react-projects\\sakar\\frontend\\src\\containers\\Login.js":"5","F:\\react-projects\\sakar\\frontend\\src\\containers\\Signup.js":"6","F:\\react-projects\\sakar\\frontend\\src\\containers\\Home.js":"7","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPassword.js":"8","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPasswordConfirm.js":"9","F:\\react-projects\\sakar\\frontend\\src\\containers\\DetailPage.js":"10","F:\\react-projects\\sakar\\frontend\\src\\containers\\Profile.js":"11","F:\\react-projects\\sakar\\frontend\\src\\hocs\\Layout.js":"12","F:\\react-projects\\sakar\\frontend\\src\\actions\\auth.js":"13","F:\\react-projects\\sakar\\frontend\\src\\components\\AppCarousel.js":"14","F:\\react-projects\\sakar\\frontend\\src\\components\\AppBreadCrump.js":"15","F:\\react-projects\\sakar\\frontend\\src\\components\\Footer.js":"16","F:\\react-projects\\sakar\\frontend\\src\\components\\Appbar.js":"17","F:\\react-projects\\sakar\\frontend\\src\\reducers\\index.js":"18","F:\\react-projects\\sakar\\frontend\\src\\actions\\types.js":"19","F:\\react-projects\\sakar\\frontend\\src\\reducers\\auth.js":"20","F:\\react-projects\\sakar\\frontend\\src\\actions\\shop.js":"21","F:\\react-projects\\sakar\\frontend\\src\\reducers\\shop.js":"22","F:\\react-projects\\sakar\\frontend\\src\\containers\\UserDetail.js":"23","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderList.js":"24","F:\\react-projects\\sakar\\frontend\\src\\containers\\Messages.js":"25","F:\\react-projects\\sakar\\frontend\\src\\containers\\Addresses.js":"26","F:\\react-projects\\sakar\\frontend\\src\\components\\PageNotFound.js":"27","F:\\react-projects\\sakar\\frontend\\src\\containers\\Cart.js":"28","F:\\react-projects\\sakar\\frontend\\src\\components\\Notification.js":"29","F:\\react-projects\\sakar\\frontend\\src\\components\\DialogAlert.js":"30","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetEmail.js":"31","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetPassword.js":"32","F:\\react-projects\\sakar\\frontend\\src\\components\\Popup.js":"33","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetUserDetail.js":"34","F:\\react-projects\\sakar\\frontend\\src\\containers\\Bookmark.js":"35","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetAddress.js":"36","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetComment.js":"37","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderSteps.js":"38","F:\\react-projects\\sakar\\frontend\\src\\components\\DrawerMenu.js":"39"},{"size":219,"mtime":1626507396339,"results":"40","hashOfConfig":"41"},{"size":1608,"mtime":1626065630317,"results":"42","hashOfConfig":"41"},{"size":440,"mtime":1607278797865,"results":"43","hashOfConfig":"41"},{"size":1453,"mtime":1626480827580,"results":"44","hashOfConfig":"41"},{"size":3179,"mtime":1627684564913,"results":"45","hashOfConfig":"41"},{"size":4676,"mtime":1627684569393,"results":"46","hashOfConfig":"41"},{"size":12591,"mtime":1627795525372,"results":"47","hashOfConfig":"41"},{"size":2265,"mtime":1627684573035,"results":"48","hashOfConfig":"41"},{"size":2759,"mtime":1627684576530,"results":"49","hashOfConfig":"41"},{"size":12858,"mtime":1627870360411,"results":"50","hashOfConfig":"41"},{"size":2071,"mtime":1626481495217,"results":"51","hashOfConfig":"41"},{"size":2395,"mtime":1627794453768,"results":"52","hashOfConfig":"41"},{"size":12819,"mtime":1628920160090,"results":"53","hashOfConfig":"41"},{"size":1177,"mtime":1628128167773,"results":"54","hashOfConfig":"41"},{"size":1159,"mtime":1623148176778,"results":"55","hashOfConfig":"56"},{"size":791,"mtime":1627536315464,"results":"57","hashOfConfig":"41"},{"size":6731,"mtime":1627851224424,"results":"58","hashOfConfig":"41"},{"size":186,"mtime":1623746632736,"results":"59","hashOfConfig":"41"},{"size":2915,"mtime":1627008069222,"results":"60","hashOfConfig":"41"},{"size":4395,"mtime":1630540565921,"results":"61","hashOfConfig":"41"},{"size":7935,"mtime":1627529544752,"results":"62","hashOfConfig":"41"},{"size":1998,"mtime":1627683722068,"results":"63","hashOfConfig":"41"},{"size":4032,"mtime":1627254149445,"results":"64","hashOfConfig":"41"},{"size":1088,"mtime":1625223640905,"results":"65","hashOfConfig":"41"},{"size":1360,"mtime":1625223629787,"results":"66","hashOfConfig":"41"},{"size":4194,"mtime":1627254717762,"results":"67","hashOfConfig":"41"},{"size":339,"mtime":1626470253280,"results":"68","hashOfConfig":"41"},{"size":6321,"mtime":1627850857794,"results":"69","hashOfConfig":"41"},{"size":888,"mtime":1625223500899,"results":"70","hashOfConfig":"41"},{"size":943,"mtime":1626403496489,"results":"71","hashOfConfig":"41"},{"size":3200,"mtime":1627684587116,"results":"72","hashOfConfig":"41"},{"size":3277,"mtime":1627684591041,"results":"73","hashOfConfig":"41"},{"size":1296,"mtime":1626726471744,"results":"74","hashOfConfig":"41"},{"size":4684,"mtime":1627684596529,"results":"75","hashOfConfig":"41"},{"size":4808,"mtime":1627796676715,"results":"76","hashOfConfig":"41"},{"size":3576,"mtime":1627684580378,"results":"77","hashOfConfig":"41"},{"size":2988,"mtime":1627684583945,"results":"78","hashOfConfig":"41"},{"size":2105,"mtime":1627850721412,"results":"79","hashOfConfig":"41"},{"size":3116,"mtime":1626463362767,"results":"80","hashOfConfig":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1gzeejd",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},"j4yux7",{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"83"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"83"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"83"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"83"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"83"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},"F:\\react-projects\\sakar\\frontend\\src\\index.js",[],["187","188"],"F:\\react-projects\\sakar\\frontend\\src\\App.js",[],"F:\\react-projects\\sakar\\frontend\\src\\store.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Activate.js",["189","190"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { verify, resetState } from \"../actions/auth\";\nimport { Button, Typography, LinearProgress } from \"@material-ui/core\";\n\nconst Activate = ({\n  requestSuccess,\n  verify,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const verify_account = (e) => {\n    const uid = match.params.uid;\n    const token = match.params.token;\n    verify(uid, token);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/login\" />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n      <Typography variant=\"h5\">تایید ایمیل</Typography>\n      <Button\n        style={{ margin: 20 }}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={verify_account}\n        type=\"button\"\n      >\n        تایید\n      </Button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { verify, resetState })(Activate);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Login.js",["191"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Login = ({ login, isAuthenticated, requestFail, resetState }) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (isAuthenticated) {\n      resetState();\n    }\n  }, [requestFail, isAuthenticated]);\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    login(email, password);\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant=\"h5\">ورود</Typography>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"رمز عبور\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"4\"\n            required\n          />\n        </div>\n        <Button\n          type=\"submit\"\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ورود\n        </Button>\n      </form>\n      <Typography variant=\"body1\">\n        قبلا ثبت نام نکرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/signup\">\n          ثبت نام\n        </Link>\n      </Typography>\n      <Typography variant=\"body1\">\n        رمز عبورتان را فراموش کرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/reset_password\">\n          بازیابی\n        </Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\n\nexport default connect(mapStateToProps, { login, resetState })(Login);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Signup.js",["192"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signup, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport DialogAlert from \"../components/DialogAlert\";\nimport { Done } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Signup = ({\n  signup,\n  isAuthenticated,\n  requestSuccess,\n  requestFail,\n  resetState,\n}) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n  const [alert, setAlert] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n  });\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n  // const [helperText, setHelperText] = useState({\n  //   name_helper: \"\",\n  //   email_helper: \"\",\n  //   password_helper: \"\",\n  //   re_password_helper: \"\",\n  // });\n  // const [errorList, setErrorList] = useState({\n  //   name_error: false,\n  //   email_error: false,\n  //   password_error: false,\n  //   re_password_error: false,\n  // });\n  const { name, email, password, re_password } = formData;\n  // const { name_helper, email_helper, password_helper, re_password_helper } = helperText;\n  // const { name_error, email_error, password_error, re_password_error } = errorList;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n      setRequestSent(false);\n      setAlert({\n        isOpen: true,\n        title: \"ثبت نام انجام شد.\",\n        message: \"برای فعالسازی حساب خود لینک ارسال شده به ایمیل، را باز کنید.\",\n      });\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === re_password) {\n      signup({ name, email, password, re_password });\n      setRequestSent(true);\n    }\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant=\"h5\">ثبت نام</Typography>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"نام\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"رمز عبور\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"تایید رمز عبور\"\n            name=\"re_password\"\n            value={re_password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ایجاد حساب\n        </Button>\n      </form>\n      <Typography variant=\"body1\">\n        قبلا ثبت نام کرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/login\">\n          ورود{\" \"}\n        </Link>\n      </Typography>\n      <DialogAlert alert={alert} setAlert={setAlert} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\n\nexport default connect(mapStateToProps, { signup, resetState })(Signup);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Home.js",["193","194","195","196","197"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  Grid,\n  makeStyles,\n  CircularProgress,\n  Chip,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Divider,\n} from \"@material-ui/core\";\nimport { Rating, Pagination } from \"@material-ui/lab\";\nimport Notification from \"../components/Notification\";\nimport DialogAlert from \"../components/DialogAlert\";\nimport { connect } from \"react-redux\";\nimport { load_items, add_to_cart, load_brand } from \"../actions/shop\";\nimport { NavLink } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { SortRounded } from \"@material-ui/icons\";\nimport Popup from \"../components/Popup\";\nimport placeholderImage from \"../placeholder-image.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  noItemContainer: {\n    textAlign: \"center\",\n    marginTop: 140,\n    marginBottom: 140,\n  },\n  paginatorDiv: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 20,\n  },\n  chip: {\n    margin: 10,\n  },\n  chipContainer: {\n    overflowX: \"auto\",\n    whiteSpace: \"nowrap\",\n  },\n  off: {\n    backgroundColor: \"#f44336\",\n    borderRadius: 15,\n    color: \"#fff\",\n    paddingRight: 4,\n    paddingLeft: 4,\n    display: \"inline-block\",\n    marginLeft: 5,\n  },\n  discountPrice: {\n    display: \"inline-block\",\n  },\n  imageContainer: {\n    position: \"relative\",\n  },\n  noItemTag: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(0, 0, 0, 0.30)\",\n    borderRadius: 5,\n    color: \"#fff\",\n    paddingRight: 8,\n    paddingLeft: 8,\n    top: 5,\n    left: 5,\n  },\n}));\nconst Home = ({\n  items,\n  load_items,\n  add_to_cart,\n  isAuthenticated,\n  history,\n  brand,\n  load_brand,\n}) => {\n  const [openPopup, setOpenPopup] = useState(false);\n  const [openSelect, setOpenSelect] = React.useState(false);\n  const [openSelectSort, setOpenSelectSort] = React.useState(false);\n\n  const [filter, setFilter] = useState(\n    getQueryVariable(\"sort\") ? getQueryVariable(\"sort\") : \"\"\n  );\n  const [brandState, setbrandState] = useState(\n    getQueryVariable(\"brand\") ? getQueryVariable(\"brand\") : \"\"\n  );\n  const [page, setPage] = useState(\n    getQueryVariable(\"page\") ? parseInt(getQueryVariable(\"page\")) : 1\n  );\n  const classes = useStyles();\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const [alert, setAlert] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n    actionUrl: \"\",\n    actionText: \"\",\n  });\n  const { search } = useLocation();\n  useEffect(() => {\n    if (parseInt(getQueryVariable(\"page\")) !== page) setPage(1);\n\n    fetchData();\n  }, [search]);\n  const chipsList = [\n    { title: \"brand\", label: \"برند : \" },\n    { title: \"keyword\", label: \"جستجو : \" },\n    { title: \"category\", label: \"دسته بندی : \" },\n    { title: \"subcategory\", label: \"دسته بندی : \" },\n  ];\n  const sortingList = [\n    { title: \"ارزانترین\", sort: \"price\" },\n    { title: \"گرانترین\", sort: \"-price\" },\n    { title: \"محبوبترین\", sort: \"-star\" },\n    { title: \"پرفروشترین\", sort: \"-sold_no\" },\n    { title: \"پربازدیدترین\", sort: \"-view\" },\n    // { title: \"بیشترین تخفیف\", sort: \"-discount_price\" },\n  ];\n  const fetchData = async () => {\n    var sort = false;\n    var query = getQueryVariable(\"sort\");\n    sortingList.map((sorting) => {\n      if (sorting.title === query) {\n        sort = sorting.sort;\n      }\n    });\n    try {\n      await load_items(\n        getQueryVariable(\"page\"),\n        getQueryVariable(\"keyword\"),\n        getQueryVariable(\"category\"),\n        getQueryVariable(\"subcategory\"),\n        sort,\n        getQueryVariable(\"brand\")\n      );\n    } catch (err) {}\n    try {\n      await load_brand(\n        getQueryVariable(\"category\"),\n        getQueryVariable(\"subcategory\")\n      );\n    } catch (err) {}\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    const currentUrlParams = new URLSearchParams(window.location.search);\n    currentUrlParams.set(\"page\", value);\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\n    window.scrollTo({ top: 0, right: 0, behavior: \"smooth\" });\n  };\n  const handleDelete = (chip) => {\n    const currentUrlParams = new URLSearchParams(window.location.search);\n    currentUrlParams.delete(chip);\n    currentUrlParams.delete(\"page\");\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\n    setFilter(\"\");\n    setbrandState(\"\");\n  };\n  const AddToCartHandle = (id) => {\n    if (isAuthenticated === true) {\n      add_to_cart(id);\n      setNotify({\n        isOpen: true,\n        message: \"به سبد افزوده شد.\",\n        type: \"success\",\n      });\n    } else {\n      setAlert({\n        isOpen: true,\n        title: \"!\",\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\n        actionUrl: \"/login\",\n        actionText: \"ورود\",\n      });\n    }\n  };\n  const ApplyFilter = () => {\n    setOpenPopup(!openPopup);\n    const currentUrlParams = new URLSearchParams(window.location.search);\n    if (filter === \"\") {\n      currentUrlParams.delete(\"sort\");\n    } else {\n      currentUrlParams.set(\"sort\", filter);\n      currentUrlParams.delete(\"page\");\n    }\n    if (brandState === \"\") {\n      currentUrlParams.delete(\"brand\");\n    } else {\n      currentUrlParams.set(\"brand\", brandState);\n      currentUrlParams.delete(\"page\");\n    }\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\n  };\n  const handleCheck = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectChange = (event) => {\n    setbrandState(event.target.value);\n  };\n  return (\n    <div>\n      <div className={classes.chipContainer}>\n        <Chip\n          className={classes.chip}\n          label={\n            getQueryVariable(\"sort\")\n              ? \"فیلترها : \" + getQueryVariable(\"sort\")\n              : \"فیلترها\"\n          }\n          clickable\n          color=\"secondary\"\n          onClick={() => setOpenPopup(!openPopup)}\n          onDelete={() => handleDelete(\"sort\")}\n          deleteIcon={getQueryVariable(\"sort\") ? \"\" : <SortRounded />}\n        />\n        {chipsList.map(\n          (chip) =>\n            getQueryVariable(chip.title) && (\n              <Chip\n                className={classes.chip}\n                label={chip.label + getQueryVariable(chip.title)}\n                onDelete={() => handleDelete(chip.title)}\n                color=\"secondary\"\n              />\n            )\n        )}\n      </div>\n      {items ? (\n        <Grid container spacing={1}>\n          {items.items.map((item) => (\n            <Grid item xs={6} sm={4} md={3} lg={2}>\n              <Card style={{ maxWidth: 280 }}>\n                <CardActionArea component={NavLink} to={`/detail/${item.id}`}>\n                  <CardMedia\n                    component=\"img\"\n                    image={item.image}\n                    height=\"160\"\n                    onError={(e) => {\n                      e.target.src = placeholderImage;\n                    }}\n                  />\n                  <Typography variant=\"caption\" className={classes.noItemTag}>\n                    {item.stock_no === 0 && \"ناموجود\"}\n                    {item.stock_no < 5 &&\n                      item.stock_no !== 0 &&\n                      item.stock_no + \" عدد باقیمانده\"}\n                  </Typography>\n\n                  <CardContent style={{ height: 160 }}>\n                    <Typography variant=\"body1\" gutterBottom>\n                      {item.title}\n                    </Typography>\n                    <div>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                        gutterBottom\n                      >\n                        {item.user_name}\n                      </Typography>\n                    </div>\n                    {item.discount_price && item.discount_price > 0 ? (\n                      <>\n                        <Typography\n                          variant=\"body2\"\n                          className={classes.discountPrice}\n                        >\n                          {item.discount_price.toLocaleString()}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          className={classes.off}\n                        >{`${item.discount_percent.toFixed(1)} %`}</Typography>\n                      </>\n                    ) : (\n                      <Typography variant=\"body2\">\n                        {item.price.toLocaleString()}\n                      </Typography>\n                    )}\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        bottom: 15,\n                        left: 10,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <Typography variant=\"body2\">\n                        ({item.star.toFixed(1)})\n                      </Typography>\n                      <Rating max={1} value={1} />\n                    </div>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <div className={classes.noItemContainer}>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      )}\n      {items && items.items.length < 1 && (\n        <div className={classes.noItemContainer}>\n          <Typography variant=\"h6\">محصولی یافت نشد.</Typography>\n        </div>\n      )}\n      <div className={classes.paginatorDiv}>\n        {items && items.count > 1 && (\n          <Pagination\n            count={items.count}\n            page={page}\n            color=\"secondary\"\n            onChange={handlePageChange}\n          />\n        )}\n      </div>\n      <Popup\n        title={\"فیلترها :\"}\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <FormGroup>\n          <FormControl>\n            <InputLabel>مرتب سازی بر اساس</InputLabel>\n            <Select\n              open={openSelectSort}\n              onClose={() => setOpenSelectSort(false)}\n              onOpen={() => setOpenSelectSort(true)}\n              value={filter}\n              onChange={handleCheck}\n            >\n              <MenuItem value=\"\">هیچ کدام</MenuItem>\n              {sortingList.map((sorting) => (\n                <MenuItem value={sorting.title}>{sorting.title}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Divider />\n          <FormControl>\n            <InputLabel>برند</InputLabel>\n            <Select\n              open={openSelect}\n              onClose={() => setOpenSelect(false)}\n              onOpen={() => setOpenSelect(true)}\n              value={brandState}\n              onChange={handleSelectChange}\n            >\n              <MenuItem value=\"\">هیچ کدام</MenuItem>\n              {brand &&\n                brand.map((br) => (\n                  <MenuItem value={br.title}>{br.title}</MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n\n          <Button\n            style={{ marginTop: 20 }}\n            onClick={ApplyFilter}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            تایید\n          </Button>\n        </FormGroup>\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n      <DialogAlert alert={alert} setAlert={setAlert} />\n    </div>\n  );\n};\nfunction getQueryVariable(variable) {\n  var query = decodeURI(window.location.search.substring(1)).replace(\n    /\\+/g,\n    \" \"\n  );\n  //console.log(query); //\"app=article&act=news_content&aid=160990\"\n  var vars = query.split(\"&\");\n  //console.log(vars); //[ 'app=article', 'act=news_content', 'aid=160990' ]\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\");\n    //console.log(pair); //[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\n    if (pair[0] == variable) {\n      return pair[1];\n    }\n  }\n  return false;\n}\nconst mapStateToProps = (state) => ({\n  items: state.shop.items,\n  brand: state.shop.brand,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, {\n  load_items,\n  add_to_cart,\n  load_brand,\n})(Home);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPassword.js",["198"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst ResetPassword = ({\n  requestSuccess,\n  requestFail,\n  resetState,\n  reset_password,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n  });\n  const { email } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    reset_password(email);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/\" />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant=\"h5\">درخواست بازنشانی رمز عبور</Typography>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ارسال\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password, resetState })(\n  ResetPassword\n);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPasswordConfirm.js",["199"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm, resetState } from \"../actions/auth\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst ResetPasswordConfirm = ({\n  requestSuccess,\n  reset_password_confirm,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\",\n  });\n\n  const { new_password, re_new_password } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/\" />;\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"رمز عبور جدید\"\n            name=\"new_password\"\n            value={new_password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"تکرار رمز عبور\"\n            name=\"re_new_password\"\n            value={re_new_password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password_confirm, resetState })(\n  ResetPasswordConfirm\n);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\DetailPage.js",["200"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  IconButton,\r\n  LinearProgress,\r\n  CircularProgress,\r\n  Collapse,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AddShoppingCart,\r\n  BookmarkBorder,\r\n  Bookmark,\r\n  ExpandLess,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\nimport { Rating, Pagination } from \"@material-ui/lab\";\r\nimport Notification from \"../components/Notification\";\r\nimport DialogAlert from \"../components/DialogAlert\";\r\nimport SetComment from \"../containers/SetComment\";\r\nimport Popup from \"../components/Popup\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  load_item,\r\n  add_to_cart,\r\n  bookmark,\r\n  load_comments,\r\n} from \"../actions/shop\";\r\nimport AppCarousel from \"../components/AppCarousel\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  commentContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 250,\r\n  },\r\n  commentCard: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 150,\r\n  },\r\n  paper: {\r\n    height: 250,\r\n  },\r\n  summery: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  collapseTitle: { flex: 1 },\r\n  paginatorDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  emptyDiv: {\r\n    textAlign: \"center\",\r\n    height: 600,\r\n  },\r\n  carousel: { height: 400 },\r\n  off: {\r\n    backgroundColor: \"#f44336\",\r\n    borderRadius: 15,\r\n    color: \"#fff\",\r\n    paddingRight: 8,\r\n    paddingLeft: 8,\r\n    display: \"inline-block\",\r\n    margin: 10,\r\n  },\r\n  discountPrice: {\r\n    display: \"inline-block\",\r\n  },\r\n}));\r\nconst DetailPage = ({\r\n  item,\r\n  add_to_cart,\r\n  load_item,\r\n  match,\r\n  isAuthenticated,\r\n  bookmark,\r\n  comments,\r\n  load_comments,\r\n  order,\r\n}) => {\r\n  const [openSelect, setOpenSelect] = React.useState(false);\r\n  const [addedToCart, setAddedToCart] = React.useState(false);\r\n  const [addToCart, setAddToCart] = React.useState(false);\r\n  const [color, setColor] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const classes = useStyles();\r\n  const itemId = match.params.itemId;\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [alert, setAlert] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    message: \"\",\r\n    actionUrl: \"\",\r\n    actionText: \"\",\r\n  });\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  useEffect(() => {\r\n    load_item(itemId);\r\n    load_comments(itemId, 1);\r\n    window.scrollTo(0, 0);\r\n    if (addToCart) {\r\n      setAddedToCart(true);\r\n    }\r\n  }, [order]);\r\n  const AddCommentHandle = () => {\r\n    if (isAuthenticated === true) {\r\n      setOpenPopup(true);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const AddToCartHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      if (item.colors.length > 0) {\r\n        if (color !== \"\") {\r\n          add_to_cart(id, color);\r\n          setAddToCart(true);\r\n        } else {\r\n          setAlert({\r\n            isOpen: true,\r\n            title: \"!\",\r\n            message: \"لطفا رنگ را انتخاب کنید.\",\r\n          });\r\n        }\r\n      } else {\r\n        add_to_cart(id, false);\r\n        setAddToCart(true);\r\n      }\r\n      // setNotify({\r\n      //   isOpen: true,\r\n      //   message: \"به سبد افزوده شد.\",\r\n      //   type: \"success\",\r\n      // });\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const BookmarkHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      bookmark(id, false);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const [expand, setExpand] = React.useState({\r\n    detail: false,\r\n    summery: false,\r\n  });\r\n  const { detail, summery } = expand;\r\n  const handleExpandClick = (name) => {\r\n    if (name === \"detail\") {\r\n      setExpand({\r\n        detail: !detail,\r\n        summery: false,\r\n      });\r\n    } else {\r\n      setExpand({\r\n        detail: false,\r\n        summery: !summery,\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    load_comments(itemId, value);\r\n  };\r\n  const handleSelectChange = (event) => {\r\n    setColor(event.target.value);\r\n  };\r\n  if (addedToCart) return <Redirect to=\"/cart\" />;\r\n\r\n  return item ? (\r\n    <>\r\n      <Card className={classes.pageContainer}>\r\n        <Grid container>\r\n          <Grid xs={12} md={6}>\r\n            <AppCarousel className={classes.carousel} images={item.images} />\r\n          </Grid>\r\n          <Grid xs={12} md={6}>\r\n            <div className={classes.summery}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                onClick={() => BookmarkHandle(item.id)}\r\n              >\r\n                {item.bookmarked ? (\r\n                  <Bookmark style={{ fontSize: 35 }} />\r\n                ) : (\r\n                  <BookmarkBorder style={{ fontSize: 35 }} />\r\n                )}\r\n              </IconButton>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                {item.title}\r\n              </Typography>\r\n\r\n              <Rating gutterBottom precision={0.5} value={item.star} readOnly />\r\n              <Typography gutterBottom>فروشنده :{item.user_name}</Typography>\r\n              <Typography gutterBottom>{item.brand_name}</Typography>\r\n              {item.discount_price && item.discount_price > 0 ? (\r\n                <div>\r\n                  <Typography className={classes.discountPrice} variant=\"h5\">\r\n                    {item.discount_price.toLocaleString()}\r\n                    {\" تومان \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    className={classes.off}\r\n                  >{`${item.discount_percent.toFixed(1)} %`}</Typography>\r\n                </div>\r\n              ) : (\r\n                <Typography variant=\"h5\">\r\n                  {item.price.toLocaleString()}\r\n                </Typography>\r\n              )}\r\n\r\n              {item.colors.length > 0 && (\r\n                <FormGroup style={{ marginBottom: 10 }}>\r\n                  <FormControl>\r\n                    <InputLabel>رنگ</InputLabel>\r\n                    <Select\r\n                      open={openSelect}\r\n                      onClose={() => setOpenSelect(false)}\r\n                      onOpen={() => setOpenSelect(true)}\r\n                      value={color}\r\n                      onChange={handleSelectChange}\r\n                    >\r\n                      {item.colors.map((c) => (\r\n                        <MenuItem value={c.id}>\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                backgroundColor: c.color,\r\n                                border: \"2px solid rgba(0, 0, 0, 0.22)\",\r\n                                borderRadius: \"50%\",\r\n                                display: \"inline-block\",\r\n                                width: 22,\r\n                                height: 22,\r\n                                marginLeft: 10,\r\n                                marginRight: 10,\r\n                              }}\r\n                            ></div>\r\n                            <Typography variant=\"h6\">{c.title}</Typography>\r\n                          </div>\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </FormGroup>\r\n              )}\r\n\r\n              <Button\r\n                onClick={() => AddToCartHandle(item.id)}\r\n                disabled={item.stock_no < 1}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                startIcon={\r\n                  addToCart ? (\r\n                    <CircularProgress\r\n                      size={22}\r\n                      style={{ marginLeft: \"10px\" }}\r\n                      color=\"inherit\"\r\n                    />\r\n                  ) : (\r\n                    <AddShoppingCart style={{ marginLeft: \"10px\" }} />\r\n                  )\r\n                }\r\n                gutterBottom\r\n              >\r\n                {item.stock_no < 1 ? \"اتمام موجودی\" : \"افزودن به سبد خرید\"}\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Card className={classes.pageContainer}>\r\n        <CardActions disableSpacing>\r\n          <Typography className={classes.collapseTitle} variant=\"h6\">\r\n            نقد و بررسی اجمالی :\r\n          </Typography>\r\n          <IconButton onClick={() => handleExpandClick(\"summery\")}>\r\n            {summery ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={summery} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: item.description_short,\r\n              }}\r\n            />\r\n          </CardContent>\r\n        </Collapse>\r\n        <Divider />\r\n        <CardActions disableSpacing>\r\n          <Typography variant=\"h6\" className={classes.collapseTitle}>\r\n            مشخصات :\r\n          </Typography>\r\n          <IconButton onClick={() => handleExpandClick(\"detail\")}>\r\n            {detail ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={detail} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: item.description_long,\r\n              }}\r\n            />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n      <Card className={classes.commentContainer}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          onClick={() => AddCommentHandle()}\r\n        >\r\n          ثبت نظر\r\n        </Button>\r\n        <Grid container spacing={1}>\r\n          {comments &&\r\n            comments.comments.length > 0 &&\r\n            comments.comments.map((comment) => (\r\n              <Grid item xs={12} md={6}>\r\n                <Card variant=\"outlined\" className={classes.commentCard}>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    {jMoment(comment.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\">\r\n                    {comment.user_name}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">{comment.title}</Typography>\r\n                  <Rating name=\"read-only\" value={comment.star} readOnly />\r\n                  <Typography variant=\"body1\">{comment.description}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {comments && comments.count > 1 && (\r\n          <div className={classes.paginatorDiv}>\r\n            <Pagination\r\n              count={comments.count}\r\n              page={page}\r\n              color=\"secondary\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </Card>\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      <DialogAlert alert={alert} setAlert={setAlert} />\r\n      <Popup\r\n        title={\"ثبت نظر\"}\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <SetComment id={item.id} setOpenPopup={setOpenPopup} />\r\n      </Popup>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <LinearProgress color=\"secondary\" />\r\n      <div className={classes.emptyDiv}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.shop.item,\r\n  comments: state.shop.comments,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  order: state.shop.order,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  load_item,\r\n  add_to_cart,\r\n  bookmark,\r\n  load_comments,\r\n})(DetailPage);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Profile.js",[],"F:\\react-projects\\sakar\\frontend\\src\\hocs\\Layout.js",["201"],"import React, { useEffect, useState } from \"react\";\nimport Appbar from \"../components/Appbar\";\n///import AppBreadCrump from \"../components/AppBreadCrump\";\nimport Footer from \"../components/Footer\";\nimport { connect } from \"react-redux\";\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { create } from \"jss\";\nimport rtl from \"jss-rtl\";\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst Layout = (props) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await props.checkAuthenticated();\n        await props.load_user();\n      } catch (err) {}\n    };\n    if (JSON.parse(localStorage.getItem(\"darkState\"))) {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#464646\");\n    }\n    fetchData();\n  }, []);\n  const [darkState, setDarkState] = useState(\n    JSON.parse(localStorage.getItem(\"darkState\"))\n  );\n  const palletType = darkState ? \"dark\" : \"light\";\n\n  const darkTheme = createMuiTheme({\n    typography: {\n      fontFamily: \"Vazir\",\n    },\n    direction: \"rtl\",\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#2979ff\",\n      },\n    },\n  });\n  const handleThemeChange = () => {\n        if (!darkState) {\n          document\n            .querySelector('meta[name=\"theme-color\"]')\n            .setAttribute(\"content\", \"#464646\");\n        } else {\n          document\n            .querySelector('meta[name=\"theme-color\"]')\n            .setAttribute(\"content\", \"#ffffff\");\n        }\n    setDarkState(!darkState);\n    localStorage.setItem(\n      \"darkState\",\n      (!JSON.parse(localStorage.getItem(\"darkState\"))).toString()\n    );\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={darkTheme}>\n        <Appbar checked={darkState} onChange={handleThemeChange} />\n        {/* <AppBreadCrump /> */}\n        <Container>{props.children}</Container>\n        <CssBaseline />\n\n        <Footer />\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","F:\\react-projects\\sakar\\frontend\\src\\actions\\auth.js",["202","203","204","205","206"],"import axios from \"axios\";\nimport { load_cart, logout2, load_comments } from \"./shop\";\nimport {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_ADDRESS_SUCCESS,\n  LOAD_ADDRESS_FAIL,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_ADDRESS_SUCCESS,\n  SET_ADDRESS_FAIL,\n  REMOVE_ADDRESS_SUCCESS,\n  REMOVE_ADDRESS_FAIL,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n} from \"./types\";\nexport const comment = (item, star, title, description) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, item, star, title, description });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/comment/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SET_COMMENTS_SUCCESS,\n      });\n      dispatch(load_comments(item, 1));\n    } catch (err) {\n      dispatch({\n        type: SET_COMMENTS_FAIL,\n      });\n    }\n  }\n};\n\nexport const set_user_detail =\n  (id, name, account_no, phone_no, birth_date, id_code) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const body = JSON.stringify({\n        id,\n        name,\n        account_no,\n        phone_no,\n        birth_date,\n        id_code,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/user-set/`,\n          body,\n          config\n        );\n\n        dispatch({\n          type: SET_USER_DETAIL_SUCCESS,\n          payload: res.data,\n        });\n        dispatch(load_user());\n      } catch (err) {\n        dispatch({\n          type: SET_USER_DETAIL_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: SET_USER_DETAIL_FAIL,\n      });\n    }\n  };\n\nexport const load_bookmark =\n  (page = 1) =>\n  async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const userId = localStorage.getItem(\"id\");\n      try {\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/bookmark-list/${userId}/${page}/`,\n          config\n        );\n\n        dispatch({\n          type: LOAD_BOOKMARK_SUCCESS,\n          payload: res.data,\n        });\n      } catch (err) {\n        dispatch({\n          type: LOAD_BOOKMARK_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: LOAD_BOOKMARK_FAIL,\n      });\n    }\n  };\n\nexport const load_address = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/address-list/${user}/`,\n        config\n      );\n\n      dispatch({\n        type: LOAD_ADDRESS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_ADDRESS_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: LOAD_ADDRESS_FAIL,\n    });\n  }\n};\n\nexport const set_address =\n  (id, name, address, zip_code, phone) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const user = localStorage.getItem(\"id\");\n      const body = JSON.stringify({\n        id,\n        name,\n        address,\n        zip_code,\n        phone,\n        user,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/address/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_ADDRESS_SUCCESS,\n        });\n        dispatch(load_address());\n      } catch (error) {\n        dispatch({\n          type: SET_ADDRESS_FAIL,\n        });\n      }\n    }\n  };\nexport const remove_address = (id) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({\n      id,\n      user,\n      delete: true,\n    });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/address/`,\n        body,\n        config\n      );\n      dispatch({\n        type: REMOVE_ADDRESS_SUCCESS,\n      });\n      dispatch(load_address());\n    } catch (error) {\n      dispatch({\n        type: REMOVE_ADDRESS_FAIL,\n      });\n    }\n  }\n};\nexport const checkAuthenticated = () => async (dispatch) => {\n  if (typeof window == \"undefined\") {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const load_user = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      );\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n      dispatch(load_cart());\n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(load_user());\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const signup =\n  ({ name, email, password, re_password }) =>\n  async (dispatch) => {\n    // const csrftoken = getCookie(\"csrftoken\");\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"X-CSRFToken\": csrftoken,\n      },\n    };\n\n    const body = JSON.stringify({ name, email, password, re_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      // console.log(\"request.status\", error.request.status);\n      // console.log(\"request.response\", error.request.response);\n      // console.log(\"message\", error.message);\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n    }\n  };\n\nexport const verify = (uid, token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_FAIL,\n      });\n    }\n  };\nexport const set_email =\n  (new_email, re_new_email, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_email,\n        re_new_email,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_email/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_EMAIL_SUCCESS,\n        });\n        dispatch(load_user());\n      } catch (error) {\n        dispatch({\n          type: SET_EMAIL_FAIL,\n        });\n      }\n    }\n  };\nexport const set_password =\n  (new_password, re_new_password, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_password,\n        re_new_password,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_password/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_PASSWORD_SUCCESS,\n        });\n      } catch (error) {\n        dispatch({\n          type: SET_PASSWORD_FAIL,\n        });\n      }\n    }\n  };\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n  dispatch(logout2({ type: LOGOUT }));\n};\nexport const resetState = () => (dispatch) => {\n  dispatch({ type: RESET_STATE });\n};\n// function getCookie(name) {\n//   var cookieValue = null;\n//   if (document.cookie && document.cookie !== \"\") {\n//     var cookies = document.cookie.split(\";\");\n//     for (var i = 0; i < cookies.length; i++) {\n//       var cookie = cookies[i].trim();\n//       // Does this cookie string begin with the name we want?\n//       if (cookie.substring(0, name.length + 1) === name + \"=\") {\n//         cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//         break;\n//       }\n//     }\n//   }\n//   return cookieValue;\n// }\n","F:\\react-projects\\sakar\\frontend\\src\\components\\AppCarousel.js",[],"F:\\react-projects\\sakar\\frontend\\src\\components\\AppBreadCrump.js",["207"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\nfunction AppBreadCrump() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n          پوشاک{\" \"}\r\n        </Link>\r\n        <Link\r\n          color=\"inherit\"\r\n          href=\"/getting-started/installation/\"\r\n          onClick={handleClick}\r\n        >\r\n          کفش مردانه\r\n        </Link>\r\n        <Typography color=\"textPrimary\">آدیداس </Typography>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppBreadCrump;\r\n",["208","209"],"F:\\react-projects\\sakar\\frontend\\src\\components\\Footer.js",["210"],"import React from \"react\";\r\n///import { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Divider,\r\n  //Grid,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    minHeight: 250,\r\n    marginTop: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <Divider />\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{margin:20}}\r\n          onClick={() => {\r\n            window.scrollTo({ top: 0, right: 0, behavior: \"smooth\" });\r\n          }}\r\n        >\r\n          برگشت به بالا\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\Appbar.js",["211","212"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  TextField,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\nimport {\r\n  ShoppingCartOutlined,\r\n  Brightness7,\r\n  Brightness4,\r\n  PermIdentityRounded,\r\n  Menu,\r\n  ExpandMore,\r\n  SearchSharp,\r\n} from \"@material-ui/icons\";\r\nimport logo from \"../sk.svg\";\r\nimport { load_menu } from \"../actions/shop\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  center: { flexGrow: 1, textAlign: \"center\" },\r\n  rightIcons: { flexGrow: 1 },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  exit: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n  },\r\n  list: {\r\n    width: 280,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst Appbar = ({\r\n  isAuthenticated,\r\n  logout,\r\n  checked,\r\n  onChange,\r\n  order,\r\n  history,\r\n  category,\r\n  load_menu,\r\n  subcategory,\r\n}) => {\r\n  useEffect(() => {\r\n    load_menu();\r\n  }, []);\r\n  const classes = useStyles();\r\n  const authLinks = (\r\n    <Toolbar>\r\n      <Link className={classes.exit} onClick={() => logOut()}>\r\n        <Typography variant=\"body1\">خروج</Typography>\r\n      </Link>\r\n    </Toolbar>\r\n  );\r\n  const logOut = () => {\r\n    logout();\r\n    setDrawerState(!drawerstate);\r\n  };\r\n  const [drawerstate, setDrawerState] = useState(false);\r\n  const toggleDrawer = (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setDrawerState(!drawerstate);\r\n  };\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpand = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const onTextChange = (e) => setSearch(e.target.value);\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    const currentUrlParams = new URLSearchParams();\r\n    currentUrlParams.set(\"keyword\", search);\r\n    if (window.location.pathname === \"/\") {\r\n      history.push(\r\n        window.location.pathname + \"?\" + currentUrlParams.toString()\r\n      );\r\n    } else {\r\n      window.location.replace(\"/?keyword=\" + search);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" color=\"inherit\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n            <Menu />\r\n          </IconButton>\r\n          <div className={classes.center}>\r\n            <Link to=\"/\">\r\n              <img src={logo} style={{ height: 30 }} />\r\n            </Link>\r\n          </div>\r\n          <IconButton color=\"inherit\" onClick={onChange}>\r\n            {checked ? <Brightness7 /> : <Brightness4 />}\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar>\r\n        <div className={classes.rightIcons}>\r\n          <Link className={classes.navLink} exact to=\"/profile/user-info\">\r\n            <IconButton color=\"inherit\">\r\n              <PermIdentityRounded />\r\n            </IconButton>\r\n          </Link>\r\n          <Link className={classes.navLink} exact to=\"/cart\">\r\n            <IconButton color=\"inherit\">\r\n              <Badge\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                badgeContent={\r\n                  order\r\n                    ? order.reduce((n, { cart_items }) => n + cart_items.length, 0)\r\n                    : 0\r\n                }\r\n                color=\"secondary\"\r\n              >\r\n                <ShoppingCartOutlined />\r\n              </Badge>\r\n            </IconButton>\r\n          </Link>\r\n        </div>\r\n        <form autoComplete=\"off\" onSubmit={(e) => onSearch(e)}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            style={{ marginTop: 5 }}\r\n            id=\"search\"\r\n            placeholder=\"جستجو\"\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            value={search}\r\n            onChange={(e) => onTextChange(e)}\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <IconButton color=\"inherit\" size=\"small\" type=\"submit\">\r\n                  <SearchSharp />\r\n                </IconButton>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Toolbar>\r\n      <Divider />\r\n\r\n      <Drawer anchor={\"left\"} open={drawerstate} onClose={toggleDrawer}>\r\n        <div className={classes.list}>\r\n          <Toolbar>\r\n            <Link className={classes.navLink} to=\"/\" onClick={toggleDrawer}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                صفحه اصلی\r\n              </Typography>\r\n            </Link>\r\n          </Toolbar>\r\n          {category &&\r\n            category.map((cat) => (\r\n              <Accordion\r\n                expanded={expanded === cat.title}\r\n                onChange={handleExpand(cat.title)}\r\n              >\r\n                <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <Typography>{cat.title}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <List>\r\n                    <ListItem>\r\n                      <Link\r\n                        onClick={toggleDrawer}\r\n                        className={classes.navLink}\r\n                        to={`/?page=1&category=${cat.title}`}\r\n                      >\r\n                        <Typography>همه موارد این دسته</Typography>\r\n                      </Link>\r\n                    </ListItem>\r\n                    {cat.sub_category.map((sub) => (\r\n                      <ListItem>\r\n                        <Link\r\n                          onClick={toggleDrawer}\r\n                          className={classes.navLink}\r\n                          to={`/?page=1&subcategory=${sub.title}`}\r\n                        >\r\n                          <Typography>{sub.title}</Typography>\r\n                        </Link>\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))}\r\n          {isAuthenticated && authLinks}\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  order: state.shop.order,\r\n  category: state.shop.category,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { logout, load_menu })(Appbar)\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\reducers\\index.js",[],"F:\\react-projects\\sakar\\frontend\\src\\actions\\types.js",[],"F:\\react-projects\\sakar\\frontend\\src\\reducers\\auth.js",["213","214","215"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_ADDRESS_SUCCESS,\n  LOAD_ADDRESS_FAIL,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_ADDRESS_SUCCESS,\n  SET_ADDRESS_FAIL,\n  REMOVE_ADDRESS_SUCCESS,\n  REMOVE_ADDRESS_FAIL,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n} from \"../actions/types\";\n\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: null,\n  user: {\n    id: null,\n  },\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case USER_LOADED_SUCCESS:\n      localStorage.setItem(\"id\", payload.id);\n      return {\n        ...state,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n        requestSuccess: true,\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case RESET_PASSWORD_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case ACTIVATION_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_EMAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    //new\n    case SET_USER_DETAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_USER_DETAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOAD_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        address: payload,\n      };\n    case LOAD_BOOKMARK_SUCCESS:\n      return {\n        ...state,\n        bookmarks: payload,\n      };\n    case SET_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_COMMENTS_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case RESET_PASSWORD_CONFIRM_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case ACTIVATION_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_EMAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_ADDRESS_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case AUTHENTICATED_FAIL:\n      localStorage.removeItem(\"id\");\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      localStorage.removeItem(\"id\");\n      return {\n        ...state,\n        user: null,\n      };\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case RESET_STATE:\n      return {\n        ...state,\n        requestSuccess: null,\n        requestFail: null,\n      };\n    case REMOVE_ADDRESS_SUCCESS:\n    case REMOVE_ADDRESS_FAIL:\n    default:\n      return state;\n  }\n}\n","F:\\react-projects\\sakar\\frontend\\src\\actions\\shop.js",[],"F:\\react-projects\\sakar\\frontend\\src\\reducers\\shop.js",["216","217","218"],"import {\r\n  LOAD_ITEMS_SUCCESS,\r\n  LOAD_ITEMS_FAIL,\r\n  LOAD_ITEM_SUCCESS,\r\n  LOAD_ITEM_FAIL,\r\n  LOAD_CART_SUCCESS,\r\n  LOAD_CART_FAIL,\r\n  LOGOUT,\r\n  ADD_TO_CART_SUCCESS,\r\n  ADD_TO_CART_FAIL,\r\n  REMOVE_FROM_CART_SUCCESS,\r\n  REMOVE_FROM_CART_FAIL,\r\n  REMOVE_ONE_FROM_CART_SUCCESS,\r\n  REMOVE_ONE_FROM_CART_FAIL,\r\n  BOOKMARK_SUCCESS,\r\n  BOOKMARK_FAIL,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_MENU_SUCCESS,\r\n  LOAD_MENU_FAIL,\r\n  LOAD_BRAND_SUCCESS,\r\n  LOAD_BRAND_FAIL,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOAD_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n        item: null,\r\n        comments: null,\r\n      };\r\n    case LOAD_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        item: payload,\r\n      };\r\n    case LOAD_BRAND_SUCCESS:\r\n      return {\r\n        ...state,\r\n        brand: payload,\r\n      };\r\n    case LOAD_MENU_SUCCESS:\r\n      return {\r\n        ...state,\r\n        category: payload,\r\n      };\r\n    case LOAD_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: payload,\r\n      };\r\n\r\n    case LOAD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: payload,\r\n      };\r\n    case ADD_TO_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: payload,\r\n      };\r\n    case REMOVE_ONE_FROM_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: payload,\r\n      };\r\n    case REMOVE_FROM_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: payload,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"id\");\r\n      return {\r\n        ...state,\r\n        order: null,\r\n      };\r\n    case BOOKMARK_SUCCESS:\r\n    case BOOKMARK_FAIL:\r\n    case REMOVE_ONE_FROM_CART_FAIL:\r\n    case REMOVE_FROM_CART_FAIL:\r\n    case ADD_TO_CART_FAIL:\r\n    case LOAD_CART_FAIL:\r\n    case LOAD_ITEMS_FAIL:\r\n    case LOAD_ITEM_FAIL:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\UserDetail.js",["219","220"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  LinearProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_user } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\n\r\nimport SetEmail from \"../containers/SetEmail\";\r\nimport SetPassword from \"../containers/SetPassword\";\r\nimport Popup from \"../components/Popup\";\r\nimport SetUserDetail from \"../containers/SetUserDetail\";\r\n\r\nconst UserDetail = ({ user, load_user }) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_user();\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [childComponent, setchildComponent] = useState(\"\");\r\n\r\n  const handleDialog = (btnname) => {\r\n    setchildComponent(btnname);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  function ChildrenComponent({ value }) {\r\n    switch (value) {\r\n      case \"ویرایش مشخصات\":\r\n        return (\r\n          <SetUserDetail\r\n            propsid={user.id}\r\n            propsname={user.name}\r\n            propsphone_no={user.phone_no}\r\n            propsaccount_no={user.account_no}\r\n            propsbirth_date={user.birth_date}\r\n            propsid_code={user.id_code}\r\n            setOpenPopup={setOpenPopup}\r\n          />\r\n        );\r\n      case \"تغییر ایمیل\":\r\n        return <SetEmail setOpenPopup={setOpenPopup} />;\r\n      case \"تغییر رمز عبور\":\r\n        return <SetPassword setOpenPopup={setOpenPopup} />;\r\n    }\r\n  }\r\n  return user ? (\r\n    <div style={{ marginRight: 20, marginLeft: 20 }}>\r\n      <Button\r\n        style={{ marginTop: 20, marginLeft: 20 }}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"ویرایش مشخصات\")}\r\n      >\r\n        ویرایش مشخصات\r\n      </Button>\r\n\r\n      <Button\r\n        style={{ marginLeft: 20, marginTop: 20 }}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"تغییر رمز عبور\")}\r\n      >\r\n        تغییر رمز عبور\r\n      </Button>\r\n\r\n      <Button\r\n        style={{ marginTop: 20 }}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"تغییر ایمیل\")}\r\n      >\r\n        تغییر ایمیل\r\n      </Button>\r\n\r\n      <Avatar src=\"/broken-image.jpg\" style={{ marginTop: 20 }} />\r\n\r\n      <Typography variant=\"h5\">ایمیل</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.email ? user.email : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"h5\">نام</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.name ? user.name : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"h5\">تلفن</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.phone_no ? user.phone_no : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"h5\">شماره کارت</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.account_no ? user.account_no : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n\r\n      <Typography variant=\"h5\">تاریخ تولد</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.birth_date\r\n          ? jMoment(user.birth_date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")\r\n          : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n\r\n      <Typography variant=\"h5\">کد ملی</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.id_code ? user.id_code : \"--\"}\r\n      </Typography>\r\n      <Popup\r\n        title={childComponent}\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <ChildrenComponent value={childComponent} />\r\n      </Popup>\r\n    </div>\r\n  ) : (\r\n    <LinearProgress color=\"secondary\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\nexport default connect(mapStateToProps, { load_user })(UserDetail);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderList.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Messages.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Addresses.js",["221","222"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_address, remove_address } from \"../actions/auth\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  ButtonGroup,\r\n  CircularProgress,\r\n  makeStyles,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Popup from \"../components/Popup\";\r\nimport SetAddress from \"../containers/SetAddress\";\r\nimport { DeleteOutline, EditRounded } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  btn: {\r\n    marginBottom: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\nconst Addresses = ({ addresses, load_address, remove_address }) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_address();\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const classes = useStyles();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [selected, setSelected] = useState();\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    address: \"\",\r\n    name: \"\",\r\n    zip_code: \"\",\r\n    phone: \"\",\r\n  });\r\n  const handleSelect = (id) => {\r\n    setSelected(id);\r\n    // console.log(id);\r\n  };\r\n  const handleDialog = (index) => {\r\n    if (index === \"create\") {\r\n      setFormData({\r\n        id: 0,\r\n        address: \"\",\r\n        name: \"\",\r\n        zip_code: \"\",\r\n        phone: \"\",\r\n      });\r\n    } else {\r\n      setFormData({\r\n        id: addresses[index].id,\r\n        address: addresses[index].address,\r\n        name: addresses[index].name,\r\n        zip_code: addresses[index].zip_code,\r\n        phone: addresses[index].phone,\r\n      });\r\n    }\r\n    setOpenPopup(true);\r\n  };\r\n  const { id, name, address, zip_code, phone } = formData;\r\n\r\n  return addresses ? (\r\n    <div className={classes.pageContainer}>\r\n      <Button\r\n        className={classes.btn}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"create\")}\r\n      >\r\n        آدرس جدید\r\n      </Button>\r\n      <Grid container spacing={2}>\r\n        {addresses.map((address, index) => (\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <div\r\n              onClick={() => handleSelect(address.id)}\r\n              style={{\r\n                border: `1px solid ${\r\n                  address.id === selected ? \"#2979ff\" : \"rgba(0, 0, 0, 0.12)\"\r\n                }`,\r\n                borderRadius: 4,\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography>\r\n                  آدرس : {address.address.substring(0, 20)}...\r\n                </Typography>\r\n                <Typography>نام : {address.name}</Typography>\r\n                <Typography>کد پستی : {address.zip_code}</Typography>\r\n                <Typography>تلفن : {address.phone}</Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <ButtonGroup size=\"small\" color=\"secondary\">\r\n                  <Button onClick={() => handleDialog(index)}>\r\n                    <EditRounded />\r\n                  </Button>\r\n                  <Button onClick={() => remove_address(address.id)}>\r\n                    <DeleteOutline />\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </CardActions>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Popup\r\n        title={\"آدرس جدید\"}\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <SetAddress\r\n          pid={id}\r\n          paddress={address}\r\n          pname={name}\r\n          pzip_code={zip_code}\r\n          pphone={phone}\r\n          setOpenPopup={setOpenPopup}\r\n        />\r\n      </Popup>\r\n      {addresses.length < 1 && (\r\n        <div style={{ textAlign: \"center\", marginTop: 80 }}>\r\n          <Typography variant=\"h6\">لیست آدرس ها خالی است.</Typography>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  addresses: state.auth.address,\r\n});\r\nexport default connect(mapStateToProps, { load_address, remove_address })(\r\n  Addresses\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\PageNotFound.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Cart.js",["223","224"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Remove, DeleteOutline, Add } from \"@material-ui/icons\";\r\nimport {\r\n  load_cart,\r\n  add_to_cart,\r\n  remove_one_from_cart,\r\n  remove_from_cart,\r\n} from \"../actions/shop\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport { connect } from \"react-redux\";\r\nimport placeholderImage from \"../placeholder-image.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n  },\r\n  cartTotal: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  divColor: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textColor: { display: \"inline-block\", marginLeft: 5 },\r\n}));\r\n\r\nconst Cart = ({\r\n  load_cart,\r\n  add_to_cart,\r\n  remove_one_from_cart,\r\n  remove_from_cart,\r\n  isAuthenticated,\r\n  order,\r\n}) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_cart(localStorage.getItem(\"id\"));\r\n      } catch (err) {}\r\n    };\r\n    if (localStorage.getItem(\"id\")) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\r\n\r\n  const AddToCartHandle = (id, color) => {\r\n    add_to_cart(id, color);\r\n  };\r\n  const RemoveFromCartHandle = (id) => {\r\n    remove_from_cart(id);\r\n  };\r\n  const RemoveOneFromCartHandle = (id, color) => {\r\n    remove_one_from_cart(id, color);\r\n  };\r\n  return order ? (\r\n    order.map(\r\n      (o) =>\r\n        o.cart_items.length > 0 && (\r\n          <div>\r\n            <Grid container className={classes.pageContainer} spacing={2}>\r\n              {o.cart_items.map((cartitem) => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <Card variant=\"outlined\" style={{ maxWidth: 300 }}>\r\n                    <CardActionArea href={`/detail/${cartitem.item}`}>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        height=\"170\"\r\n                        image={cartitem.image}\r\n                        onError={(e) => {\r\n                          e.target.src = placeholderImage;\r\n                        }}\r\n                      />\r\n                      <CardContent style={{ height: 170 }}>\r\n                        <Typography gutterBottom variant=\"h6\">\r\n                          {cartitem.item_title}\r\n                        </Typography>\r\n                        <Typography\r\n                          gutterBottom\r\n                          color=\"textSecondary\"\r\n                          variant=\"body2\"\r\n                        >\r\n                          فروشنده :{cartitem.item_user}\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                          {cartitem.item_discount && cartitem.item_discount > 0\r\n                            ? cartitem.item_discount.toLocaleString()\r\n                            : cartitem.item_price.toLocaleString()}{\" \"}\r\n                          تومان\r\n                        </Typography>\r\n                        <Typography>\r\n                          قیمت :{cartitem.final_price.toLocaleString()} تومان\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <ButtonGroup size=\"small\" color=\"secondary\">\r\n                        <Button\r\n                          onClick={() =>\r\n                            RemoveOneFromCartHandle(\r\n                              cartitem.item,\r\n                              cartitem.color\r\n                            )\r\n                          }\r\n                        >\r\n                          {cartitem.quantity > 1 ? (\r\n                            <Remove />\r\n                          ) : (\r\n                            <DeleteOutline />\r\n                          )}\r\n                        </Button>\r\n                        <Button>{cartitem.quantity}</Button>\r\n                        <Button\r\n                          onClick={() =>\r\n                            AddToCartHandle(cartitem.item, cartitem.color)\r\n                          }\r\n                        >\r\n                          <Add />\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                      {cartitem.color_title && (\r\n                        <div className={classes.divColor}>\r\n                          <div\r\n                            style={{\r\n                              backgroundColor: cartitem.color_hex,\r\n                              border: \"2px solid rgba(0, 0, 0, 0.22)\",\r\n                              borderRadius: \"50%\",\r\n                              display: \"inline-block\",\r\n                              width: 22,\r\n                              height: 22,\r\n                            }}\r\n                          ></div>\r\n                          <Typography className={classes.textColor}>\r\n                            {cartitem.color_title}\r\n                          </Typography>\r\n                        </div>\r\n                      )}\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Card className={classes.cartTotal} variant=\"outlined\">\r\n              <Typography variant=\"h5\">\r\n                تعداد کل :{\" \"}\r\n                {o.cart_items.reduce((n, { quantity }) => n + quantity, 0)}\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                قیمت کل سبد : {o.total.toLocaleString()}\r\n              </Typography>\r\n            </Card>\r\n          </div>\r\n        )\r\n    )\r\n  ) : (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Typography variant=\"h6\">سبد خرید خالی است.</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  order: state.shop.order,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  load_cart,\r\n  add_to_cart,\r\n  remove_one_from_cart,\r\n  remove_from_cart,\r\n})(Cart);\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\Notification.js",[],"F:\\react-projects\\sakar\\frontend\\src\\components\\DialogAlert.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\SetEmail.js",["225"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_email, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20, },\r\n}));\r\nconst SetEmail = ({\r\n  set_email,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_email: \"\",\r\n    re_new_email: \"\",\r\n    current_password: \"\",\r\n  });\r\n\r\n  const { new_email, re_new_email, current_password } = formData;\r\n  const classes = useStyles();\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_email(new_email, re_new_email, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"email\"\r\n            label=\"ایمیل جدید\"\r\n            name=\"new_email\"\r\n            value={new_email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"email\"\r\n            label=\"تکرار ایمیل\"\r\n            name=\"re_new_email\"\r\n            value={re_new_email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"رمز عبور\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_email, resetState })(SetEmail);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetPassword.js",["226"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_password, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20, },\r\n}));\r\nconst SetPassword = ({\r\n  set_password,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  resetState,\r\n  requestFail,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n    current_password: \"\",\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { new_password, re_new_password, current_password } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_password(new_password, re_new_password, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"رمز عبور جدید\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"تکرار رمز جدید\"\r\n            name=\"re_new_password\"\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"رمز عبور فعلی\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_password, resetState })(\r\n  SetPassword\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\Popup.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\SetUserDetail.js",["227"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { set_user_detail, resetState } from \"../actions/auth\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20, },\r\n}));\r\nconst SetUserDetail = ({\r\n  propsid,\r\n  propsname,\r\n  propsphone_no,\r\n  propsaccount_no,\r\n  propsbirth_date,\r\n  propsid_code,\r\n  setOpenPopup,\r\n  set_user_detail,\r\n  resetState,\r\n  requestSuccess,\r\n  requestFail,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    id: propsid,\r\n    name: propsname,\r\n    phone_no: propsphone_no,\r\n    account_no: propsaccount_no,\r\n    birth_date: propsbirth_date,\r\n    id_code: propsid_code,\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { id, name, phone_no, account_no, birth_date, id_code } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_user_detail(id, name, account_no, phone_no, birth_date, id_code);\r\n    setRequestSent(true);\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"نام و نام خانوادگی\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"تلفن\"\r\n            name=\"phone_no\"\r\n            value={phone_no}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"شماره کارت\"\r\n            name=\"account_no\"\r\n            value={account_no}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n            <DatePicker\r\n              className={classes.textField}\r\n              name=\"birth_date\"\r\n              okLabel=\"تأیید\"\r\n              label=\"تاریخ تولد\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={birth_date}\r\n              onChange={(date) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  birth_date: date.toISOString().split(\"T\")[0],\r\n                })\r\n              }\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"کد ملی\"\r\n            name=\"id_code\"\r\n            value={id_code}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_user_detail, resetState })(\r\n  SetUserDetail\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Bookmark.js",["228"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_bookmark } from \"../actions/auth\";\r\nimport { bookmark } from \"../actions/shop\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport placeholderImage from \"../placeholder-image.png\";\r\nimport { Rating, Pagination } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  paginatorDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n}));\r\nconst Bookmark = ({ load_bookmark, bookmarkList, bookmark }) => {\r\n  const [page, setPage] = useState(1);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_bookmark(page);\r\n      } catch (err) {}\r\n    };\r\n    if (localStorage.getItem(\"id\")) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n  const classes = useStyles();\r\n  const BookmarkHandle = (id) => {\r\n    bookmark(id, page);\r\n  };\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    load_bookmark(value);\r\n    window.scrollTo({ top: 0, right: 0, behavior: \"smooth\" });\r\n  };\r\n  return bookmarkList ? (\r\n    <div className={classes.pageContainer}>\r\n      <Grid container spacing={1}>\r\n        {bookmarkList.items.map((bookmark) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <Card variant=\"outlined\" style={{ maxWidth: 300 }}>\r\n              <CardActionArea href={`/detail/${bookmark.item}`}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"170\"\r\n                  image={bookmark.image}\r\n                  onError={(e) => {\r\n                    e.target.src = placeholderImage;\r\n                  }}\r\n                />\r\n                <CardContent style={{ height: 170 }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {bookmark.item_title}\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"subtitle2\"\r\n                    gutterBottom\r\n                  >\r\n                    فروشنده:{bookmark.item_user}\r\n                  </Typography>\r\n                  {bookmark.item_discount && bookmark.item_discount > 0 ? (\r\n                    <Typography variant=\"body1\" gutterBottom>\r\n                      {bookmark.item_discount.toLocaleString()}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography variant=\"body1\" gutterBottom>\r\n                      {bookmark.item_price.toLocaleString()}\r\n                    </Typography>\r\n                  )}\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 15,\r\n                      left: 10,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"body2\">\r\n                      ({bookmark.item_star.toFixed(1)})\r\n                    </Typography>\r\n                    <Rating max={1} value={1} />\r\n                  </div>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  onClick={() => BookmarkHandle(bookmark.item)}\r\n                >\r\n                  <DeleteOutline />\r\n                </Button>\r\n                {bookmark.item_stock < 1 && (\r\n                  <Typography color=\"textSecondary\"> ناموجود </Typography>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {bookmarkList.items.length < 1 && (\r\n        <div style={{ textAlign: \"center\", marginTop: 120 }}>\r\n          <Typography variant=\"h6\">محصولی نشان نشده است.</Typography>\r\n        </div>\r\n      )}\r\n      {bookmarkList && bookmarkList.count > 1 && (\r\n        <div className={classes.paginatorDiv}>\r\n          <Pagination\r\n            count={bookmarkList.count}\r\n            page={page}\r\n            color=\"secondary\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  bookmarkList: state.auth.bookmarks,\r\n});\r\nexport default connect(mapStateToProps, { load_bookmark, bookmark })(Bookmark);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetAddress.js",["229"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_address, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20,},\r\n}));\r\nconst SetAddress = ({\r\n  set_address,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n  pid,\r\n  pname,\r\n  paddress,\r\n  pzip_code,\r\n  pphone,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    id: pid,\r\n    address: paddress,\r\n    name: pname,\r\n    zip_code: pzip_code,\r\n    phone: pphone,\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const { id, name, address, zip_code, phone } = formData;\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_address(id, name, address, zip_code, phone);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"text\"\r\n            label=\"آدرس\"\r\n            name=\"address\"\r\n            value={address}\r\n            multiline\r\n            rows={4}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"text\"\r\n            label=\"نام\"\r\n            name=\"name\"\r\n            value={name}\r\n            multiline\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"کد پستی\"\r\n            name=\"zip_code\"\r\n            value={zip_code}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"تلفن\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_address, resetState })(\r\n  SetAddress\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetComment.js",["230"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, comment } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetComment = ({\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n  id,\r\n  comment,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    item: id,\r\n    star: 5,\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const { item, star, title, description } = formData;\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    comment(item, star, title, description);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <Rating name=\"star\" value={star} onChange={(e) => onChange(e)} />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"text\"\r\n            label=\"عنوان\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"text\"\r\n            label=\"نظر\"\r\n            name=\"description\"\r\n            value={description}\r\n            multiline\r\n            rows={4}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { resetState, comment })(SetComment);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderSteps.js",["231"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n  Button,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport Cart from \"../containers/Cart\";\r\nimport Addresses from \"../containers/Addresses\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"سبد خرید (به تفکیک فروشنده)\", \"انتخاب آدرس\", \"پرداخت\"];\r\n}\r\nfunction ProfileComponent({ step }) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Cart />;\r\n    case 1:\r\n      return <Addresses />;\r\n    case 2:\r\n      return <h1>payment page</h1>;\r\n  }\r\n}\r\nexport default function OrderSteps() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card variant=\"outlined\">\r\n        <div>\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            className={classes.button}\r\n          >\r\n            برگشت\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleNext}\r\n            className={classes.button}\r\n          >\r\n            {activeStep === steps.length - 1 ? \"پرداخت\" : \"ادامه\"}\r\n          </Button>\r\n        </div>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel >{label}</StepLabel>\r\n              <StepContent>\r\n                <ProfileComponent step={index} />\r\n              </StepContent>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\DrawerMenu.js",["232"],"import React, { useEffect, useState } from \"react\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from \"@material-ui/core\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { drawer_items } from \"./DrawerItems\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  exit: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n  },\r\n  list: {\r\n    width: 280,\r\n  },\r\n}));\r\nconst DrawerMenu = ({ isAuthenticated, logout, setDrawerState }) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpand = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const authLinks = (\r\n    <Toolbar>\r\n      <Link className={classes.exit} onClick={() => logOut()}>\r\n        <Typography variant=\"body1\">خروج</Typography>\r\n      </Link>\r\n    </Toolbar>\r\n  );\r\n  const logOut = () => {\r\n    logout();\r\n    setDrawerState(false);\r\n  };\r\n  return (\r\n    <div className={classes.list}>\r\n      <Toolbar>\r\n        <Link className={classes.title} to=\"/\" onClick={setDrawerState(false)}>\r\n          <Typography variant=\"h6\" color=\"textPrimary\">\r\n            SAKAR\r\n          </Typography>\r\n        </Link>\r\n      </Toolbar>\r\n      {drawer_items.map((drawer_item) => (\r\n        <Accordion\r\n          expanded={expanded === drawer_item.category}\r\n          onChange={handleExpand(drawer_item.category)}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMore />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Typography>{drawer_item.title}</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n              <ListItem>\r\n                <Link\r\n                  onClick={setDrawerState(false)}\r\n                  className={classes.navLink}\r\n                  to={`/?page=1&category=${drawer_item.title}`}\r\n                >\r\n                  <Typography>همه موارد این دسته</Typography>\r\n                </Link>\r\n              </ListItem>\r\n              {drawer_item.sub.map((sub_item) => (\r\n                <ListItem>\r\n                  <Link\r\n                    onClick={setDrawerState(false)}\r\n                    className={classes.navLink}\r\n                    to={`/?page=1&subcategory=${sub_item.title}`}\r\n                  >\r\n                    <Typography>{sub_item.title}</Typography>\r\n                  </Link>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n      {isAuthenticated && authLinks}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(DrawerMenu);\r\n",["233","234"],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":23,"column":6,"nodeType":"241","endLine":23,"endColumn":35,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":42,"column":9,"nodeType":"245","endLine":42,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":36,"column":6,"nodeType":"241","endLine":36,"endColumn":36,"suggestions":"246"},{"ruleId":"239","severity":1,"message":"240","line":71,"column":6,"nodeType":"241","endLine":71,"endColumn":35,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":5,"column":3,"nodeType":"250","messageId":"251","endLine":5,"endColumn":14},{"ruleId":"239","severity":1,"message":"252","line":117,"column":6,"nodeType":"241","endLine":117,"endColumn":14,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":135,"column":31,"nodeType":"256","messageId":"257","endLine":135,"endColumn":33},{"ruleId":"248","severity":1,"message":"258","line":173,"column":9,"nodeType":"250","messageId":"251","endLine":173,"endColumn":24},{"ruleId":"259","severity":1,"message":"260","line":402,"column":17,"nodeType":"261","messageId":"262","endLine":402,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":32,"column":6,"nodeType":"241","endLine":32,"endColumn":35,"suggestions":"263"},{"ruleId":"239","severity":1,"message":"240","line":31,"column":6,"nodeType":"241","endLine":31,"endColumn":35,"suggestions":"264"},{"ruleId":"239","severity":1,"message":"265","line":128,"column":6,"nodeType":"241","endLine":128,"endColumn":13,"suggestions":"266"},{"ruleId":"239","severity":1,"message":"267","line":30,"column":6,"nodeType":"241","endLine":30,"endColumn":8,"suggestions":"268"},{"ruleId":"248","severity":1,"message":"269","line":50,"column":13,"nodeType":"250","messageId":"251","endLine":50,"endColumn":16},{"ruleId":"248","severity":1,"message":"269","line":198,"column":15,"nodeType":"250","messageId":"251","endLine":198,"endColumn":18},{"ruleId":"248","severity":1,"message":"269","line":231,"column":13,"nodeType":"250","messageId":"251","endLine":231,"endColumn":16},{"ruleId":"248","severity":1,"message":"269","line":487,"column":15,"nodeType":"250","messageId":"251","endLine":487,"endColumn":18},{"ruleId":"248","severity":1,"message":"269","line":521,"column":15,"nodeType":"250","messageId":"251","endLine":521,"endColumn":18},{"ruleId":"248","severity":1,"message":"270","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":24},{"ruleId":"235","replacedBy":"271"},{"ruleId":"237","replacedBy":"272"},{"ruleId":"248","severity":1,"message":"273","line":4,"column":3,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"239","severity":1,"message":"274","line":66,"column":6,"nodeType":"241","endLine":66,"endColumn":8,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":118,"column":15,"nodeType":"278","endLine":118,"endColumn":56},{"ruleId":"248","severity":1,"message":"279","line":25,"column":3,"nodeType":"250","messageId":"251","endLine":25,"endColumn":20},{"ruleId":"248","severity":1,"message":"280","line":26,"column":3,"nodeType":"250","messageId":"251","endLine":26,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":45,"column":1,"nodeType":"283","endLine":211,"endColumn":2},{"ruleId":"248","severity":1,"message":"284","line":19,"column":3,"nodeType":"250","messageId":"251","endLine":19,"endColumn":17},{"ruleId":"248","severity":1,"message":"285","line":21,"column":3,"nodeType":"250","messageId":"251","endLine":21,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":26,"column":1,"nodeType":"283","endLine":95,"endColumn":2},{"ruleId":"239","severity":1,"message":"286","line":26,"column":6,"nodeType":"241","endLine":26,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":36,"column":5,"nodeType":"290","messageId":"291","endLine":53,"endColumn":6},{"ruleId":"248","severity":1,"message":"292","line":6,"column":3,"nodeType":"250","messageId":"251","endLine":6,"endColumn":7},{"ruleId":"239","severity":1,"message":"293","line":35,"column":6,"nodeType":"241","endLine":35,"endColumn":8,"suggestions":"294"},{"ruleId":"239","severity":1,"message":"295","line":58,"column":6,"nodeType":"241","endLine":58,"endColumn":8,"suggestions":"296"},{"ruleId":"248","severity":1,"message":"297","line":66,"column":9,"nodeType":"250","messageId":"251","endLine":66,"endColumn":29},{"ruleId":"239","severity":1,"message":"298","line":41,"column":6,"nodeType":"241","endLine":41,"endColumn":35,"suggestions":"299"},{"ruleId":"239","severity":1,"message":"298","line":40,"column":6,"nodeType":"241","endLine":40,"endColumn":35,"suggestions":"300"},{"ruleId":"239","severity":1,"message":"298","line":54,"column":6,"nodeType":"241","endLine":54,"endColumn":35,"suggestions":"301"},{"ruleId":"239","severity":1,"message":"302","line":43,"column":6,"nodeType":"241","endLine":43,"endColumn":8,"suggestions":"303"},{"ruleId":"239","severity":1,"message":"298","line":47,"column":6,"nodeType":"241","endLine":47,"endColumn":35,"suggestions":"304"},{"ruleId":"239","severity":1,"message":"298","line":43,"column":6,"nodeType":"241","endLine":43,"endColumn":35,"suggestions":"305"},{"ruleId":"288","severity":1,"message":"289","line":28,"column":3,"nodeType":"290","messageId":"291","endLine":35,"endColumn":4},{"ruleId":"248","severity":1,"message":"306","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"235","replacedBy":"307"},{"ruleId":"237","replacedBy":"308"},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetState'. Either include it or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["311"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["312"],["313"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchData' and 'page'. Either include them or remove the dependency array.",["314"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'AddToCartHandle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["315"],["316"],"React Hook useEffect has missing dependencies: 'addToCart', 'itemId', 'load_comments', and 'load_item'. Either include them or remove the dependency array. If 'load_item' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["317"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["318"],"'res' is assigned a value but never used.","'NavigateNextIcon' is defined but never used.",["309"],["310"],"'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'load_menu'. Either include it or remove the dependency array. If 'load_menu' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["319"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LOAD_ADDRESS_FAIL' is defined but never used.","'LOAD_BOOKMARK_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'LOAD_MENU_FAIL' is defined but never used.","'LOAD_BRAND_FAIL' is defined but never used.","React Hook useEffect has a missing dependency: 'load_user'. Either include it or remove the dependency array. If 'load_user' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'load_address'. Either include it or remove the dependency array. If 'load_address' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"React Hook useEffect has a missing dependency: 'load_cart'. Either include it or remove the dependency array. If 'load_cart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"'RemoveFromCartHandle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'resetState' and 'setOpenPopup'. Either include them or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],["324"],["325"],"React Hook useEffect has missing dependencies: 'load_bookmark' and 'page'. Either include them or remove the dependency array. If 'load_bookmark' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["326"],["327"],["328"],"'useEffect' is defined but never used.",["309"],["310"],"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"329","fix":"333"},{"desc":"334","fix":"335"},{"desc":"329","fix":"336"},{"desc":"329","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},{"desc":"350","fix":"353"},{"desc":"354","fix":"355"},{"desc":"350","fix":"356"},{"desc":"350","fix":"357"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState]",{"range":"358","text":"359"},"Update the dependencies array to be: [requestFail, isAuthenticated, resetState]",{"range":"360","text":"361"},{"range":"362","text":"359"},"Update the dependencies array to be: [fetchData, page, search]",{"range":"363","text":"364"},{"range":"365","text":"359"},{"range":"366","text":"359"},"Update the dependencies array to be: [addToCart, itemId, load_comments, load_item, order]",{"range":"367","text":"368"},"Update the dependencies array to be: [props]",{"range":"369","text":"370"},"Update the dependencies array to be: [load_menu]",{"range":"371","text":"372"},"Update the dependencies array to be: [load_user]",{"range":"373","text":"374"},"Update the dependencies array to be: [load_address]",{"range":"375","text":"376"},"Update the dependencies array to be: [load_cart]",{"range":"377","text":"378"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState, setOpenPopup]",{"range":"379","text":"380"},{"range":"381","text":"380"},{"range":"382","text":"380"},"Update the dependencies array to be: [load_bookmark, page]",{"range":"383","text":"384"},{"range":"385","text":"380"},{"range":"386","text":"380"},[569,598],"[requestFail, requestSuccess, resetState]",[899,929],"[requestFail, isAuthenticated, resetState]",[1889,1918],[2698,2706],"[fetchData, page, search]",[742,771],[811,840],[2952,2959],"[addToCart, itemId, load_comments, load_item, order]",[1078,1080],"[props]",[1244,1246],"[load_menu]",[692,694],"[load_user]",[888,890],"[load_address]",[1295,1297],"[load_cart]",[1027,1056],"[requestFail, requestSuccess, resetState, setOpenPopup]",[1046,1075],[1489,1518],[1094,1096],"[load_bookmark, page]",[1111,1140],[1059,1088]]