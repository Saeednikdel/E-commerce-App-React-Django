[{"F:\\react-projects\\sakar\\frontend\\src\\index.js":"1","F:\\react-projects\\sakar\\frontend\\src\\App.js":"2","F:\\react-projects\\sakar\\frontend\\src\\store.js":"3","F:\\react-projects\\sakar\\frontend\\src\\containers\\Activate.js":"4","F:\\react-projects\\sakar\\frontend\\src\\containers\\Login.js":"5","F:\\react-projects\\sakar\\frontend\\src\\containers\\Signup.js":"6","F:\\react-projects\\sakar\\frontend\\src\\containers\\Home.js":"7","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPassword.js":"8","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPasswordConfirm.js":"9","F:\\react-projects\\sakar\\frontend\\src\\containers\\DetailPage.js":"10","F:\\react-projects\\sakar\\frontend\\src\\containers\\Profile.js":"11","F:\\react-projects\\sakar\\frontend\\src\\hocs\\Layout.js":"12","F:\\react-projects\\sakar\\frontend\\src\\actions\\auth.js":"13","F:\\react-projects\\sakar\\frontend\\src\\components\\AppCarousel.js":"14","F:\\react-projects\\sakar\\frontend\\src\\components\\AppBreadCrump.js":"15","F:\\react-projects\\sakar\\frontend\\src\\components\\Footer.js":"16","F:\\react-projects\\sakar\\frontend\\src\\components\\Appbar.js":"17","F:\\react-projects\\sakar\\frontend\\src\\reducers\\index.js":"18","F:\\react-projects\\sakar\\frontend\\src\\actions\\types.js":"19","F:\\react-projects\\sakar\\frontend\\src\\reducers\\auth.js":"20","F:\\react-projects\\sakar\\frontend\\src\\actions\\shop.js":"21","F:\\react-projects\\sakar\\frontend\\src\\reducers\\shop.js":"22","F:\\react-projects\\sakar\\frontend\\src\\containers\\UserDetail.js":"23","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderList.js":"24","F:\\react-projects\\sakar\\frontend\\src\\containers\\Messages.js":"25","F:\\react-projects\\sakar\\frontend\\src\\containers\\Addresses.js":"26","F:\\react-projects\\sakar\\frontend\\src\\components\\PageNotFound.js":"27","F:\\react-projects\\sakar\\frontend\\src\\containers\\Cart.js":"28","F:\\react-projects\\sakar\\frontend\\src\\components\\DrawerItems.js":"29","F:\\react-projects\\sakar\\frontend\\src\\components\\Notification.js":"30","F:\\react-projects\\sakar\\frontend\\src\\components\\DialogAlert.js":"31","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetEmail.js":"32","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetPassword.js":"33","F:\\react-projects\\sakar\\frontend\\src\\components\\Popup.js":"34","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetUserDetail.js":"35","F:\\react-projects\\sakar\\frontend\\src\\containers\\Bookmark.js":"36","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetAddress.js":"37","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetComment.js":"38","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderSteps.js":"39"},{"size":219,"mtime":1625218627725,"results":"40","hashOfConfig":"41"},{"size":1608,"mtime":1626065630317,"results":"42","hashOfConfig":"41"},{"size":440,"mtime":1607278797865,"results":"43","hashOfConfig":"41"},{"size":1433,"mtime":1625647389794,"results":"44","hashOfConfig":"41"},{"size":2792,"mtime":1625648943630,"results":"45","hashOfConfig":"41"},{"size":3289,"mtime":1625693331408,"results":"46","hashOfConfig":"41"},{"size":5689,"mtime":1626286659384,"results":"47","hashOfConfig":"41"},{"size":1899,"mtime":1625648586673,"results":"48","hashOfConfig":"41"},{"size":2362,"mtime":1625647383289,"results":"49","hashOfConfig":"41"},{"size":6944,"mtime":1625975087059,"results":"50","hashOfConfig":"41"},{"size":2044,"mtime":1625902402026,"results":"51","hashOfConfig":"41"},{"size":1923,"mtime":1626042893828,"results":"52","hashOfConfig":"41"},{"size":13531,"mtime":1625974513672,"results":"53","hashOfConfig":"41"},{"size":863,"mtime":1625075322402,"results":"54","hashOfConfig":"41"},{"size":1159,"mtime":1623148176778,"results":"55","hashOfConfig":"41"},{"size":554,"mtime":1625223486249,"results":"56","hashOfConfig":"41"},{"size":6950,"mtime":1626287404772,"results":"57","hashOfConfig":"41"},{"size":186,"mtime":1623746632736,"results":"58","hashOfConfig":"41"},{"size":2835,"mtime":1625974125061,"results":"59","hashOfConfig":"41"},{"size":4480,"mtime":1625974430075,"results":"60","hashOfConfig":"41"},{"size":7029,"mtime":1626053672978,"results":"61","hashOfConfig":"41"},{"size":1822,"mtime":1626054312801,"results":"62","hashOfConfig":"41"},{"size":3933,"mtime":1625881040826,"results":"63","hashOfConfig":"41"},{"size":1088,"mtime":1625223640905,"results":"64","hashOfConfig":"41"},{"size":1360,"mtime":1625223629787,"results":"65","hashOfConfig":"41"},{"size":3917,"mtime":1626126020016,"results":"66","hashOfConfig":"41"},{"size":364,"mtime":1625223510925,"results":"67","hashOfConfig":"41"},{"size":4090,"mtime":1626287082224,"results":"68","hashOfConfig":"41"},{"size":1255,"mtime":1624355114217,"results":"69","hashOfConfig":"41"},{"size":888,"mtime":1625223500899,"results":"70","hashOfConfig":"41"},{"size":977,"mtime":1625223469515,"results":"71","hashOfConfig":"41"},{"size":2436,"mtime":1625886153992,"results":"72","hashOfConfig":"41"},{"size":2515,"mtime":1625647253878,"results":"73","hashOfConfig":"41"},{"size":1272,"mtime":1625556066918,"results":"74","hashOfConfig":"41"},{"size":3925,"mtime":1625703261677,"results":"75","hashOfConfig":"41"},{"size":2718,"mtime":1626286510122,"results":"76","hashOfConfig":"41"},{"size":2872,"mtime":1625965208669,"results":"77","hashOfConfig":"41"},{"size":2377,"mtime":1625974597673,"results":"78","hashOfConfig":"41"},{"size":2072,"mtime":1626286905486,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"j4yux7",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"82"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"82"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"82"},"F:\\react-projects\\sakar\\frontend\\src\\index.js",[],["184","185"],"F:\\react-projects\\sakar\\frontend\\src\\App.js",[],"F:\\react-projects\\sakar\\frontend\\src\\store.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Activate.js",["186","187"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { verify, resetState } from \"../actions/auth\";\nimport { Button, Typography, LinearProgress } from \"@material-ui/core\";\n\nconst Activate = ({\n  requestSuccess,\n  verify,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const verify_account = (e) => {\n    const uid = match.params.uid;\n    const token = match.params.token;\n    verify(uid, token);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/\" />;\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n      <Typography variant=\"h5\">تایید ایمیل</Typography>\n      <Button\n        style={{ margin: 20 }}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={verify_account}\n        type=\"button\"\n      >\n        تایید\n      </Button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { verify, resetState })(Activate);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Login.js",["188"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Login = ({\n  login,\n  isAuthenticated,\n  requestFail,\n  resetState,\n}) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (isAuthenticated) {\n      resetState();\n    }\n  }, [requestFail, isAuthenticated]);\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true)\n    login(email, password);\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n\n      <Typography variant=\"h5\">ورود</Typography>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            type=\"password\"\n            label=\"رمز عبور\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"4\"\n            required\n          />\n        </div>\n        <Button\n          type=\"submit\"\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          ورود\n        </Button>\n      </form>\n      <Typography variant=\"body1\">\n        قبلا ثبت نام نکرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/signup\">\n          ثبت نام\n        </Link>\n      </Typography>\n      <Typography variant=\"body1\">\n        رمز عبورتان را فراموش کرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/reset_password\">\n          بازیابی\n        </Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\n\nexport default connect(mapStateToProps, { login, resetState })(Login);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Signup.js",["189"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signup, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Signup = ({\n  signup,\n  isAuthenticated,\n  requestSuccess,\n  requestFail,\n  resetState,\n}) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { name, email, password, re_password } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === re_password) {\n      signup({ name, email, password, re_password });\n      setRequestSent(true)\n    }\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n  if (requestSuccess) return <Redirect to=\"login\" />;\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n\n      <Typography variant=\"h5\">ثبت نام</Typography>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            type=\"text\"\n            label=\"نام\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            type=\"password\"\n            label=\"رمز عبور\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            type=\"password\"\n            label=\"تایید رمز عبور\"\n            name=\"re_password\"\n            value={re_password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          ایجاد حساب\n        </Button>\n      </form>\n      <Typography variant=\"body1\">\n        قبلا ثبت نام کرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/login\">\n          ورود{\" \"}\n        </Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\n\nexport default connect(mapStateToProps, { signup, resetState })(Signup);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Home.js",["190","191"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  Grid,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Rating, Pagination } from \"@material-ui/lab\";\nimport Notification from \"../components/Notification\";\nimport DialogAlert from \"../components/DialogAlert\";\nimport { connect } from \"react-redux\";\nimport { load_items, add_to_cart } from \"../actions/shop\";\nimport { NavLink } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContainer: {\n    marginTop: `${theme.spacing(2)}px`,\n  },\n}));\nconst Home = ({ items, load_items, add_to_cart, isAuthenticated, history }) => {\n  const [page, setPage] = useState(\n    getQueryVariable(\"page\") ? parseInt(getQueryVariable(\"page\")) : 1\n  );\n  const classes = useStyles();\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const [alert, setAlert] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n    actionUrl: \"\",\n    actionText: \"\",\n  });\n  const { search } = useLocation();\n  useEffect(() => {\n    if (parseInt(getQueryVariable(\"page\")) !== page) setPage(1);\n    fetchData();\n  }, [search]);\n\n  const fetchData = async () => {\n    try {\n      await load_items(\n        getQueryVariable(\"page\"),\n        getQueryVariable(\"keyword\"),\n        getQueryVariable(\"category\"),\n        getQueryVariable(\"subcategory\")\n      );\n    } catch (err) {}\n  };\n\n  const handleChange = (event, value) => {\n    setPage(value);\n    const currentUrlParams = new URLSearchParams(window.location.search);\n    currentUrlParams.set(\"page\", value);\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\n  };\n\n  const AddToCartHandle = (id) => {\n    if (isAuthenticated === true) {\n      add_to_cart(id);\n      setNotify({\n        isOpen: true,\n        message: \"به سبد افزوده شد.\",\n        type: \"success\",\n      });\n    } else {\n      setAlert({\n        isOpen: true,\n        title: \"!\",\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\n        actionUrl: \"/login\",\n        actionText: \"ورود\",\n      });\n    }\n  };\n  return (\n    <div>\n      <Grid container className={classes.pageContainer} spacing={1}>\n        {items ? (\n          items[1].map((item) => (\n            <Grid item xs={12} sm={6} md={4}>\n              <Card>\n                <CardActionArea\n                  style={{ display: \"flex\" }}\n                  component={NavLink}\n                  to={`/detail/${item.id}`}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    image={item.image}\n                    style={{ width: 150, height: 150 }}\n                  />\n                  <CardContent\n                    style={{\n                      flex: \"1 0 auto\",\n                    }}\n                  >\n                    <Typography variant=\"h6\" gutterBottom>\n                      {item.title}\n                    </Typography>\n                    <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                      {item.price} تومان\n                    </Typography>\n                    <Typography color=\"error\" variant=\"body1\" gutterBottom>\n                      {item.discount_price} % تخفیف\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"subtitle2\"\n                      gutterBottom\n                    >\n                      فروشنده:{item.user_name}\n                    </Typography>\n\n                    <Rating name=\"read-only\" value={item.star} readOnly />\n                  </CardContent>\n                </CardActionArea>\n                <CardActions>\n                  <Button\n                    onClick={() => AddToCartHandle(item.id)}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                  >\n                    افزودن به سبد خرید\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))\n        ) : (\n          <CircularProgress color=\"secondary\" />\n        )}\n      </Grid>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 20,\n        }}\n      >\n        {items ? (\n          items[0].count > 1 ? (\n            <Pagination\n              count={items ? items[0].count : 5}\n              page={page}\n              color=\"secondary\"\n              onChange={handleChange}\n            />\n          ) : (\n            \"\"\n          )\n        ) : (\n          \"\"\n        )}\n      </div>\n      <Notification notify={notify} setNotify={setNotify} />\n      <DialogAlert alert={alert} setAlert={setAlert} />\n    </div>\n  );\n};\nfunction getQueryVariable(variable) {\n  var query = decodeURI(window.location.search.substring(1)).replace(\n    /\\+/g,\n    \" \"\n  );\n  //console.log(query); //\"app=article&act=news_content&aid=160990\"\n  var vars = query.split(\"&\");\n  //console.log(vars); //[ 'app=article', 'act=news_content', 'aid=160990' ]\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\");\n    //console.log(pair); //[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\n    if (pair[0] == variable) {\n      return pair[1];\n    }\n  }\n  return false;\n}\nconst mapStateToProps = (state) => ({\n  items: state.shop.items,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { load_items, add_to_cart })(Home);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPassword.js",["192"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  Typography,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst ResetPassword = ({\n  requestSuccess,\n  requestFail,\n  resetState,\n  reset_password,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n  });\n  const { email } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    reset_password(email);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/\" />;\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n      <Typography variant=\"h5\">درخواست بازنشانی رمز عبور</Typography>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n        >\n          ارسال\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password, resetState })(\n  ResetPassword\n);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\ResetPasswordConfirm.js",["193"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm, resetState } from \"../actions/auth\";\nimport { TextField, Button, LinearProgress } from \"@material-ui/core\";\n\nconst ResetPasswordConfirm = ({\n  requestSuccess,\n  reset_password_confirm,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\",\n  });\n\n  const { new_password, re_new_password } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/\" />;\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            type=\"password\"\n            label=\"رمز عبور جدید\"\n            name=\"new_password\"\n            value={new_password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            type=\"password\"\n            label=\"تکرار رمز عبور\"\n            name=\"re_new_password\"\n            value={re_new_password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password_confirm, resetState })(\n  ResetPasswordConfirm\n);\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\DetailPage.js",["194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  IconButton,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { AddShoppingCart, BookmarkBorder, Bookmark } from \"@material-ui/icons\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport Notification from \"../components/Notification\";\r\nimport DialogAlert from \"../components/DialogAlert\";\r\nimport SetComment from \"../containers/SetComment\";\r\nimport Popup from \"../components/Popup\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_item, add_to_cart, bookmark } from \"../actions/shop\";\r\nimport AppCarousel from \"../components/AppCarousel\";\r\nimport jMoment from \"moment-jalaali\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  commentContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 250,\r\n  },\r\n  commentCard: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 150,\r\n  },\r\n  paper: {\r\n    height: 250,\r\n  },\r\n  summery: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\nconst DetailPage = ({\r\n  item,\r\n  images,\r\n  add_to_cart,\r\n  load_item,\r\n  match,\r\n  isAuthenticated,\r\n  bookmarkList,\r\n  bookmark,\r\n  comments,\r\n}) => {\r\n  const classes = useStyles();\r\n  const itemId = match.params.itemId;\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [alert, setAlert] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    message: \"\",\r\n    actionUrl: \"\",\r\n    actionText: \"\",\r\n  });\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_item(itemId);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const AddCommentHandle = () => {\r\n    if (isAuthenticated === true) {\r\n      setOpenPopup(true);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const AddToCartHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      add_to_cart(id);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"به سبد افزوده شد.\",\r\n        type: \"success\",\r\n      });\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const BookmarkHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      bookmark(id);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const BookmarkCheck = () => {\r\n    const array = bookmarkList.filter(\r\n      (bookmarkitem) => bookmarkitem.item == item.id\r\n    );\r\n    return array.length === 1 ? (\r\n      <Bookmark style={{ fontSize: 35 }} />\r\n    ) : (\r\n      <BookmarkBorder style={{ fontSize: 35 }} />\r\n    );\r\n  };\r\n  return item ? (\r\n    <>\r\n      <Card className={classes.pageContainer}>\r\n        <Grid container>\r\n          <Grid sm={5}>\r\n            <AppCarousel images={images} />\r\n          </Grid>\r\n          <Grid sm={7}>\r\n            <div className={classes.summery}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                onClick={() => BookmarkHandle(item.id)}\r\n              >\r\n                {bookmarkList ? (\r\n                  <BookmarkCheck />\r\n                ) : (\r\n                  <BookmarkBorder style={{ fontSize: 35 }} />\r\n                )}\r\n              </IconButton>\r\n\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                {item.title}\r\n              </Typography>\r\n              <Typography color=\"error\" variant=\"body1\" gutterBottom>\r\n                {item.discount_price} % تخفیف\r\n              </Typography>\r\n              <Rating\r\n                gutterBottom\r\n                name=\"read-only\"\r\n                value={item.star}\r\n                readOnly\r\n              />\r\n              <Typography>فروشنده :{item.user_name}</Typography>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                قیمت : {item.price}\r\n              </Typography>\r\n\r\n              <Button\r\n                onClick={() => AddToCartHandle(item.id)}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                startIcon={<AddShoppingCart style={{ marginLeft: \"10px\" }} />}\r\n                gutterBottom\r\n              >\r\n                افزودن به سبد خرید\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Card className={classes.pageContainer}>\r\n        <Typography variant=\"h5\">نقد و بررسی اجمالی</Typography>\r\n        <Typography variant=\"body1\">{item.description_short}</Typography>\r\n        <Typography variant=\"body1\">{item.description_long}</Typography>\r\n      </Card>\r\n      <Card className={classes.commentContainer}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          onClick={() => AddCommentHandle()}\r\n        >\r\n          ثبت نظر\r\n        </Button>\r\n        {comments && comments[1].length > 0\r\n          ? comments[1].map((comment) => (\r\n              <Card variant=\"outlined\" className={classes.commentCard}>\r\n                <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                  {jMoment(comment.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">{comment.user_name}</Typography>\r\n                <Typography variant=\"body1\">{comment.title}</Typography>\r\n                <Rating name=\"read-only\" value={comment.star} readOnly />\r\n                <Typography variant=\"body1\">{comment.description}</Typography>\r\n              </Card>\r\n            ))\r\n          : \"\"}\r\n      </Card>\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      <DialogAlert alert={alert} setAlert={setAlert} />\r\n      <Popup openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n        <SetComment id={item.id} setOpenPopup={setOpenPopup} />\r\n      </Popup>\r\n    </>\r\n  ) : (\r\n    <LinearProgress color=\"secondary\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.shop.item,\r\n  images: state.shop.images,\r\n  comments: state.shop.comments,\r\n  bookmarkList: state.auth.bookmarks,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { load_item, add_to_cart, bookmark })(\r\n  DetailPage\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Profile.js",[],"F:\\react-projects\\sakar\\frontend\\src\\hocs\\Layout.js",["196"],"import React, { useEffect, useState } from \"react\";\nimport Appbar from \"../components/Appbar\";\n///import AppBreadCrump from \"../components/AppBreadCrump\";\nimport Footer from \"../components/Footer\";\nimport { connect } from \"react-redux\";\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { create } from \"jss\";\nimport rtl from \"jss-rtl\";\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst Layout = (props) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await props.checkAuthenticated();\n        await props.load_user();\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n  const [darkState, setDarkState] = useState(\n    JSON.parse(localStorage.getItem(\"darkState\"))\n  );\n  const palletType = darkState ? \"dark\" : \"light\";\n\n  const darkTheme = createMuiTheme({\n    typography: {\n      fontFamily: \"Vazir\",\n    },\n    direction: \"rtl\",\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#2979ff\",\n      },\n    },\n  });\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n    localStorage.setItem(\n      \"darkState\",\n      (!JSON.parse(localStorage.getItem(\"darkState\"))).toString()\n    );\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={darkTheme}>\n        <Appbar checked={darkState} onChange={handleThemeChange} />\n        {/* <AppBreadCrump /> */}\n        <Container>{props.children}</Container>\n        <CssBaseline />\n\n        <Footer />\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","F:\\react-projects\\sakar\\frontend\\src\\actions\\auth.js",["197","198","199","200","201"],"import axios from \"axios\";\nimport { load_cart, logout2 ,load_comments} from \"./shop\";\nimport {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  LOAD_USER_DETAIL_SUCCESS,\n  LOAD_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_ADDRESS_SUCCESS,\n  LOAD_ADDRESS_FAIL,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_ADDRESS_SUCCESS,\n  SET_ADDRESS_FAIL,\n  REMOVE_ADDRESS_SUCCESS,\n  REMOVE_ADDRESS_FAIL,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n} from \"./types\";\nexport const comment = (item, star, title, description) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, item, star, title, description });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/comment/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SET_COMMENTS_SUCCESS,\n      });\n      dispatch(load_comments(item, 1));\n    } catch (err) {\n      dispatch({\n        type: SET_COMMENTS_FAIL,\n      });\n    }\n  }\n};\nexport const load_user_detail = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/user-detail/${user}/`,\n        config\n      );\n\n      dispatch({\n        type: LOAD_USER_DETAIL_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_USER_DETAIL_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: LOAD_USER_DETAIL_FAIL,\n    });\n  }\n};\n\nexport const set_user_detail =\n  (id, name, account_no, phone_no, birth_date, id_code) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const body = JSON.stringify({\n        id,\n        name,\n        account_no,\n        phone_no,\n        birth_date,\n        id_code,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/user-set/`,\n          body,\n          config\n        );\n\n        dispatch({\n          type: SET_USER_DETAIL_SUCCESS,\n          payload: res.data,\n        });\n        dispatch(load_user_detail());\n      } catch (err) {\n        dispatch({\n          type: SET_USER_DETAIL_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: SET_USER_DETAIL_FAIL,\n      });\n    }\n  };\n\nexport const load_bookmark = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const userId = localStorage.getItem(\"id\");\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/bookmark-list/${userId}/`,\n        config\n      );\n\n      dispatch({\n        type: LOAD_BOOKMARK_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_BOOKMARK_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: LOAD_BOOKMARK_FAIL,\n    });\n  }\n};\n\nexport const load_address = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/address-list/${user}/`,\n        config\n      );\n\n      dispatch({\n        type: LOAD_ADDRESS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_ADDRESS_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: LOAD_ADDRESS_FAIL,\n    });\n  }\n};\n\nexport const set_address =\n  (id, name, address, zip_code, phone) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const user = localStorage.getItem(\"id\");\n      const body = JSON.stringify({\n        id,\n        name,\n        address,\n        zip_code,\n        phone,\n        user,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/address/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_ADDRESS_SUCCESS,\n        });\n        dispatch(load_address());\n      } catch (error) {\n        dispatch({\n          type: SET_ADDRESS_FAIL,\n        });\n      }\n    }\n  };\nexport const remove_address = (id) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({\n      id,\n      user,\n      delete: true,\n    });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/address/`,\n        body,\n        config\n      );\n      dispatch({\n        type: REMOVE_ADDRESS_SUCCESS,\n      });\n      dispatch(load_address());\n    } catch (error) {\n      dispatch({\n        type: REMOVE_ADDRESS_FAIL,\n      });\n    }\n  }\n};\nexport const checkAuthenticated = () => async (dispatch) => {\n  if (typeof window == \"undefined\") {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const load_user = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      );\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n      dispatch(load_cart());\n      dispatch(load_bookmark());\n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(load_user());\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const signup =\n  ({ name, email, password, re_password }) =>\n  async (dispatch) => {\n    const csrftoken = getCookie(\"csrftoken\");\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n    };\n\n    const body = JSON.stringify({ name, email, password, re_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      // console.log(\"request.status\", error.request.status);\n      // console.log(\"request.response\", error.request.response);\n      // console.log(\"message\", error.message);\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n    }\n  };\n\nexport const verify = (uid, token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_FAIL,\n      });\n    }\n  };\nexport const set_email =\n  (new_email, re_new_email, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_email,\n        re_new_email,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_email/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_EMAIL_SUCCESS,\n        });\n        dispatch(load_user_detail());\n      } catch (error) {\n        dispatch({\n          type: SET_EMAIL_FAIL,\n        });\n      }\n    }\n  };\nexport const set_password =\n  (new_password, re_new_password, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_password,\n        re_new_password,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_password/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_PASSWORD_SUCCESS,\n        });\n      } catch (error) {\n        dispatch({\n          type: SET_PASSWORD_FAIL,\n        });\n      }\n    }\n  };\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n  dispatch(logout2({ type: LOGOUT }));\n};\nexport const resetState = () => (dispatch) => {\n  dispatch({ type: RESET_STATE });\n};\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n","F:\\react-projects\\sakar\\frontend\\src\\components\\AppCarousel.js",[],"F:\\react-projects\\sakar\\frontend\\src\\components\\AppBreadCrump.js",["202"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\nfunction AppBreadCrump() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n          پوشاک{\" \"}\r\n        </Link>\r\n        <Link\r\n          color=\"inherit\"\r\n          href=\"/getting-started/installation/\"\r\n          onClick={handleClick}\r\n        >\r\n          کفش مردانه\r\n        </Link>\r\n        <Typography color=\"textPrimary\">آدیداس </Typography>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppBreadCrump;\r\n",["203","204"],"F:\\react-projects\\sakar\\frontend\\src\\components\\Footer.js",[],"F:\\react-projects\\sakar\\frontend\\src\\components\\Appbar.js",["205","206"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  TextField,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { load_items } from \"../actions/shop\";\r\nimport {\r\n  ShoppingCartOutlined,\r\n  Brightness7,\r\n  Brightness4,\r\n  PermIdentityRounded,\r\n  Menu,\r\n  ExpandMore,\r\n  SearchSharp,\r\n} from \"@material-ui/icons\";\r\nimport { drawer_items } from \"./DrawerItems\";\r\nimport logo from \"../sk.svg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginLeft: 20,\r\n    textDecoration: \"none\",\r\n    flexGrow: 1,\r\n  },\r\n  rightIcons: { flexGrow: 1 },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    // margin: 5,\r\n  },\r\n  exit: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n  },\r\n  list: {\r\n    width: 280,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst Appbar = ({\r\n  isAuthenticated,\r\n  logout,\r\n  checked,\r\n  onChange,\r\n  cart,\r\n  load_items,\r\n  history,\r\n}) => {\r\n  const classes = useStyles();\r\n  const authLinks = (\r\n    <Toolbar>\r\n      <Link className={classes.exit} onClick={() => logOut()}>\r\n        <Typography variant=\"body1\">خروج</Typography>\r\n      </Link>\r\n    </Toolbar>\r\n  );\r\n  const logOut = () => {\r\n    logout();\r\n    setDrawerState(!drawerstate);\r\n  };\r\n  const [drawerstate, setDrawerState] = useState(false);\r\n\r\n  const toggleDrawer = (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setDrawerState(!drawerstate);\r\n  };\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpand = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const onTextChange = (e) => setSearch(e.target.value);\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    const currentUrlParams = new URLSearchParams(window.location.search);\r\n    currentUrlParams.delete(\"category\");\r\n    currentUrlParams.delete(\"subcategory\");\r\n    currentUrlParams.set(\"page\", 1);\r\n    currentUrlParams.set(\"keyword\", search);\r\n    if (window.location.pathname === \"/\") {\r\n      history.push(\r\n        window.location.pathname + \"?\" + currentUrlParams.toString()\r\n      );\r\n      // load_items(1, search, false, false);\r\n    } else {\r\n      window.location.replace(\"/?keyword=\" + search);\r\n    }\r\n  };\r\n  const list = () => (\r\n    <div className={classes.list}>\r\n      <Toolbar>\r\n        <Link className={classes.title} to=\"/\" onClick={toggleDrawer}>\r\n          <Typography variant=\"h6\" color=\"textPrimary\">\r\n            SAKAR\r\n          </Typography>\r\n        </Link>\r\n      </Toolbar>\r\n      {drawer_items.map((drawer_item) => (\r\n        <Accordion\r\n          expanded={expanded === drawer_item.category}\r\n          onChange={handleExpand(drawer_item.category)}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMore />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Typography>{drawer_item.title}</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n              <ListItem>\r\n                <Link\r\n                  onClick={toggleDrawer}\r\n                  className={classes.navLink}\r\n                  to={`/?page=1&category=${drawer_item.title}`}\r\n                >\r\n                  <Typography>همه موارد این دسته</Typography>\r\n                </Link>\r\n              </ListItem>\r\n              {drawer_item.sub.map((sub_item) => (\r\n                <ListItem>\r\n                  <Link\r\n                    onClick={toggleDrawer}\r\n                    className={classes.navLink}\r\n                    to={`/?page=1&subcategory=${sub_item.title}`}\r\n                  >\r\n                    <Typography>{sub_item.title}</Typography>\r\n                  </Link>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n      {isAuthenticated ? authLinks : \"\"}\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" color=\"inherit\">\r\n        <Toolbar>\r\n          <div className={classes.rightIcons}>\r\n            <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n              <Menu />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <Link className={classes.title} to=\"/\">\r\n            {/* <Typography variant=\"h5\" color=\"primary\">\r\n              SAKAR\r\n            </Typography> */}\r\n            <img src={logo} style={{ height: 30 }} />\r\n          </Link>\r\n          <IconButton color=\"inherit\" onClick={onChange}>\r\n            {checked ? <Brightness7 /> : <Brightness4 />}\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar>\r\n        <div className={classes.rightIcons}>\r\n          <Link className={classes.navLink} exact to=\"/profile/user-info\">\r\n            <IconButton color=\"inherit\">\r\n              <PermIdentityRounded />\r\n            </IconButton>\r\n          </Link>\r\n          <Link className={classes.navLink} exact to=\"/cart\">\r\n            <IconButton color=\"inherit\">\r\n              <Badge\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                badgeContent={cart ? cart.length : 0}\r\n                color=\"secondary\"\r\n              >\r\n                <ShoppingCartOutlined />\r\n              </Badge>\r\n            </IconButton>\r\n          </Link>\r\n        </div>\r\n        <form\r\n          onSubmit={(e) => onSearch(e)}\r\n        >\r\n          <TextField\r\n            style={{ marginTop: 5 }}\r\n            id=\"search\"\r\n            //name=\"keyword\"\r\n            placeholder=\"جستجو\"\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            value={search}\r\n            onChange={(e) => onTextChange(e)}\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <IconButton color=\"inherit\" size=\"small\" type=\"submit\">\r\n                  <SearchSharp />\r\n                </IconButton>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Toolbar>\r\n      <Divider />\r\n\r\n      <Drawer\r\n        // BackdropProps={{ invisible: true }}\r\n        anchor={\"left\"}\r\n        open={drawerstate}\r\n        onClose={toggleDrawer}\r\n      >\r\n        {list()}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  cart: state.shop.cart,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { logout, load_items })(Appbar)\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\reducers\\index.js",[],"F:\\react-projects\\sakar\\frontend\\src\\actions\\types.js",[],"F:\\react-projects\\sakar\\frontend\\src\\reducers\\auth.js",["207","208","209","210"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  LOAD_USER_DETAIL_FAIL,\n  LOAD_USER_DETAIL_SUCCESS,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_ADDRESS_SUCCESS,\n  LOAD_ADDRESS_FAIL,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_ADDRESS_SUCCESS,\n  SET_ADDRESS_FAIL,\n  REMOVE_ADDRESS_SUCCESS,\n  REMOVE_ADDRESS_FAIL,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n} from \"../actions/types\";\n\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: null,\n  user: {\n    id: null,\n  },\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case USER_LOADED_SUCCESS:\n      localStorage.setItem(\"id\", payload.id);\n      return {\n        ...state,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n        requestSuccess: true,\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case RESET_PASSWORD_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case ACTIVATION_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_EMAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    //new\n    case LOAD_USER_DETAIL_SUCCESS:\n      return {\n        ...state,\n        userdetail: payload,\n      };\n    case SET_USER_DETAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_USER_DETAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOAD_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        address: payload,\n      };\n    case LOAD_BOOKMARK_SUCCESS:\n      return {\n        ...state,\n        bookmarks: payload,\n      };\n    case SET_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_COMMENTS_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case RESET_PASSWORD_CONFIRM_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case ACTIVATION_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_EMAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_ADDRESS_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      };\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case RESET_STATE:\n      return {\n        ...state,\n        requestSuccess: null,\n        requestFail: null,\n      };\n    case REMOVE_ADDRESS_SUCCESS:\n    case REMOVE_ADDRESS_FAIL:\n    default:\n      return state;\n  }\n}\n",["211","212"],"F:\\react-projects\\sakar\\frontend\\src\\actions\\shop.js",[],"F:\\react-projects\\sakar\\frontend\\src\\reducers\\shop.js",["213","214"],"import {\r\n  LOAD_ITEMS_SUCCESS,\r\n  LOAD_ITEMS_FAIL,\r\n  LOAD_ITEM_SUCCESS,\r\n  LOAD_ITEM_FAIL,\r\n  LOAD_CART_SUCCESS,\r\n  LOAD_CART_FAIL,\r\n  LOGOUT,\r\n  ADD_TO_CART_SUCCESS,\r\n  ADD_TO_CART_FAIL,\r\n  REMOVE_FROM_CART_SUCCESS,\r\n  REMOVE_FROM_CART_FAIL,\r\n  REMOVE_ONE_FROM_CART_SUCCESS,\r\n  REMOVE_ONE_FROM_CART_FAIL,\r\n  BOOKMARK_SUCCESS,\r\n  BOOKMARK_FAIL,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_COMMENTS_FAIL,\r\n\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  items: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOAD_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n      };\r\n    case LOAD_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        item: payload.item,\r\n        images: payload.images,\r\n      };\r\n    case LOAD_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: payload,\r\n      };\r\n\r\n    case LOAD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: payload.order,\r\n        cart: payload.items,\r\n      };\r\n    case ADD_TO_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cart: payload,\r\n      };\r\n    case REMOVE_ONE_FROM_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cart: payload,\r\n      };\r\n    case REMOVE_FROM_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cart: payload,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"id\");\r\n      return {\r\n        ...state,\r\n        cart: null,\r\n        user: null,\r\n        address: null,\r\n      };\r\n    case BOOKMARK_SUCCESS:\r\n    case BOOKMARK_FAIL:\r\n    case REMOVE_ONE_FROM_CART_FAIL:\r\n    case REMOVE_FROM_CART_FAIL:\r\n    case ADD_TO_CART_FAIL:\r\n    case LOAD_CART_FAIL:\r\n    case LOAD_ITEMS_FAIL:\r\n    case LOAD_ITEM_FAIL:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\UserDetail.js",["215","216"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  LinearProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_user_detail } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\n\r\nimport SetEmail from \"../containers/SetEmail\";\r\nimport SetPassword from \"../containers/SetPassword\";\r\nimport Popup from \"../components/Popup\";\r\nimport SetUserDetail from \"../containers/SetUserDetail\";\r\n\r\nconst UserDetail = ({ user, load_user_detail }) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_user_detail();\r\n      } catch (err) {}\r\n    };\r\n      fetchData();\r\n    \r\n  }, []);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [childComponent, setchildComponent] = useState(\"\");\r\n\r\n  const handleDialog = (btnname) => {\r\n    setchildComponent(btnname);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  function ChildrenComponent({ value }) {\r\n    switch (value) {\r\n      case \"editDetail\":\r\n        return (\r\n          <SetUserDetail\r\n            propsid={user.id}\r\n            propsname={user.name}\r\n            propsphone_no={user.phone_no}\r\n            propsaccount_no={user.account_no}\r\n            propsbirth_date={user.birth_date}\r\n            propsid_code={user.id_code}\r\n            setOpenPopup={setOpenPopup}\r\n          />\r\n        );\r\n      case \"setEmail\":\r\n        return <SetEmail setOpenPopup={setOpenPopup} />;\r\n      case \"setPassword\":\r\n        return <SetPassword setOpenPopup={setOpenPopup} />;\r\n    }\r\n  }\r\n  return user ? (\r\n    <div style={{ marginRight: 20 }}>\r\n      <Button\r\n        style={{ marginTop: 20, marginLeft: 20 }}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"editDetail\")}\r\n      >\r\n        ویرایش مشخصات\r\n      </Button>\r\n\r\n      <Button\r\n        style={{ marginLeft: 20, marginTop: 20 }}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"setPassword\")}\r\n      >\r\n        تغییر رمز عبور\r\n      </Button>\r\n\r\n      <Button\r\n        style={{ marginTop: 20 }}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"setEmail\")}\r\n      >\r\n        تغییر ایمیل\r\n      </Button>\r\n\r\n      <Avatar src=\"/broken-image.jpg\" style={{ marginTop: 20 }} />\r\n\r\n      <Typography variant=\"h5\">ایمیل</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.email ? user.email : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"h5\">نام</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.name ? user.name : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"h5\">تلفن</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.phone_no ? user.phone_no : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"h5\">شماره کارت</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.account_no ? user.account_no : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n\r\n      <Typography variant=\"h5\">تاریخ تولد</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.birth_date\r\n          ? jMoment(user.birth_date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")\r\n          : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n\r\n      <Typography variant=\"h5\">کد ملی</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        {user.id_code ? user.id_code : \"--\"}\r\n      </Typography>\r\n      <Divider />\r\n      <Popup openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n        <ChildrenComponent value={childComponent} />\r\n      </Popup>\r\n    </div>\r\n  ) : (\r\n    <LinearProgress color=\"secondary\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.userdetail,\r\n});\r\nexport default connect(mapStateToProps, { load_user_detail })(UserDetail);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderList.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Messages.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Addresses.js",["217","218"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_address, remove_address } from \"../actions/auth\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  ButtonGroup,\r\n  CircularProgress,\r\n  makeStyles,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Popup from \"../components/Popup\";\r\nimport SetAddress from \"../containers/SetAddress\";\r\nimport { DeleteOutline, EditRounded } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  btn: {\r\n    marginBottom: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\nconst Addresses = ({ addresses, load_address, remove_address }) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_address();\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const classes = useStyles();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [selected, setSelected] = useState();\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    address: \"\",\r\n    name: \"\",\r\n    zip_code: \"\",\r\n    phone: \"\",\r\n  });\r\n  const handleSelect = (id) => {\r\n    setSelected(id);\r\n    console.log(id);\r\n  };\r\n  const handleDialog = (index) => {\r\n    if (index === \"create\") {\r\n      setFormData({\r\n        id: 0,\r\n        address: \"\",\r\n        name: \"\",\r\n        zip_code: \"\",\r\n        phone: \"\",\r\n      });\r\n    } else {\r\n      setFormData({\r\n        id: addresses[index].id,\r\n        address: addresses[index].address,\r\n        name: addresses[index].name,\r\n        zip_code: addresses[index].zip_code,\r\n        phone: addresses[index].phone,\r\n      });\r\n    }\r\n    setOpenPopup(true);\r\n  };\r\n  const { id, name, address, zip_code, phone } = formData;\r\n\r\n  return addresses ? (\r\n    <div className={classes.pageContainer}>\r\n      <Button\r\n        className={classes.btn}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        onClick={() => handleDialog(\"create\")}\r\n      >\r\n        آدرس جدید\r\n      </Button>\r\n      <Grid container spacing={2}>\r\n        {addresses.map((address, index) => (\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <div\r\n              onClick={() => handleSelect(address.id)}\r\n              style={{\r\n                border: `1px solid ${\r\n                  address.id === selected ? \"#2979ff\" : \"rgba(0, 0, 0, 0.12)\"\r\n                }`,\r\n                borderRadius: 4,\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography>\r\n                  آدرس : {address.address.substring(0, 20)}...\r\n                </Typography>\r\n                <Typography>نام : {address.name}</Typography>\r\n                <Typography>کد پستی : {address.zip_code}</Typography>\r\n                <Typography>تلفن : {address.phone}</Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <ButtonGroup size=\"small\" color=\"secondary\">\r\n                  <Button onClick={() => handleDialog(index)}>\r\n                    <EditRounded />\r\n                  </Button>\r\n                  <Button onClick={() => remove_address(address.id)}>\r\n                    <DeleteOutline />\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </CardActions>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Popup openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n        <SetAddress\r\n          pid={id}\r\n          paddress={address}\r\n          pname={name}\r\n          pzip_code={zip_code}\r\n          pphone={phone}\r\n          setOpenPopup={setOpenPopup}\r\n        />\r\n      </Popup>\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  addresses: state.auth.address,\r\n});\r\nexport default connect(mapStateToProps, { load_address, remove_address })(\r\n  Addresses\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\PageNotFound.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\Cart.js",["219","220"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  ButtonGroup,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Remove, DeleteOutline, Add } from \"@material-ui/icons\";\r\nimport {\r\n  load_cart,\r\n  add_to_cart,\r\n  remove_one_from_cart,\r\n  remove_from_cart,\r\n} from \"../actions/shop\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n  },\r\n  cartTotal: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\nconst Cart = ({\r\n  load_cart,\r\n  add_to_cart,\r\n  remove_one_from_cart,\r\n  remove_from_cart,\r\n  isAuthenticated,\r\n  cart,\r\n}) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_cart(localStorage.getItem(\"id\"));\r\n      } catch (err) {}\r\n    };\r\n    if (localStorage.getItem(\"id\")) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\r\n\r\n  const AddToCartHandle = (id) => {\r\n    add_to_cart(id);\r\n  };\r\n  const RemoveFromCartHandle = (id) => {\r\n    remove_from_cart(id);\r\n  };\r\n  const RemoveOneFromCartHandle = (id) => {\r\n    remove_one_from_cart(id);\r\n  };\r\n  return cart ? (\r\n    <div>\r\n      <Grid container className={classes.pageContainer} spacing={2}>\r\n        {cart.map((cartitem) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <Card variant=\"outlined\">\r\n              <CardActionArea href={`/detail/${cartitem.item}`}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"150\"\r\n                  image={cartitem.image}\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\">\r\n                    {cartitem.item_title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    قیمت واحد : {cartitem.item_price.toLocaleString()} تومان\r\n                  </Typography>\r\n                  <Typography>\r\n                    قیمت :\r\n                    {(cartitem.item_price * cartitem.quantity).toLocaleString()}\r\n                    تومان\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <ButtonGroup size=\"small\" color=\"secondary\">\r\n                  <Button\r\n                    onClick={() => RemoveOneFromCartHandle(cartitem.item)}\r\n                  >\r\n                    {cartitem.quantity > 1 ? <Remove /> : <DeleteOutline />}\r\n                  </Button>\r\n                  <Button>{cartitem.quantity}</Button>\r\n                  <Button onClick={() => AddToCartHandle(cartitem.item)}>\r\n                    <Add />\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Card className={classes.cartTotal} variant=\"outlined\">\r\n        <Typography variant=\"h5\">\r\n          تعداد کل :{cart.reduce((n, { quantity }) => n + quantity, 0)}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n          قیمت کل سبد :\r\n          {cart\r\n            .reduce(\r\n              (n, { quantity, item_price }) => n + quantity * item_price,\r\n              0\r\n            )\r\n            .toLocaleString()}\r\n        </Typography>\r\n      </Card>\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  cart: state.shop.cart,\r\n  order: state.shop.order,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  load_cart,\r\n  add_to_cart,\r\n  remove_one_from_cart,\r\n  remove_from_cart,\r\n})(Cart);\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\DrawerItems.js",[],"F:\\react-projects\\sakar\\frontend\\src\\components\\Notification.js",[],"F:\\react-projects\\sakar\\frontend\\src\\components\\DialogAlert.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\SetEmail.js",["221"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_email, resetState } from \"../actions/auth\";\r\nimport { TextField, Button, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst SetEmail = ({\r\n  set_email,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_email: \"\",\r\n    re_new_email: \"\",\r\n    current_password: \"\",\r\n  });\r\n\r\n  const { new_email, re_new_email, current_password } = formData;\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_email(new_email, re_new_email, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      {requestSent ? <LinearProgress /> : \"\"}\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            type=\"email\"\r\n            label=\"ایمیل جدید\"\r\n            name=\"new_email\"\r\n            value={new_email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            type=\"email\"\r\n            label=\"تکرار ایمیل\"\r\n            name=\"re_new_email\"\r\n            value={re_new_email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"رمز عبور\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_email, resetState })(SetEmail);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetPassword.js",["222"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_password, resetState } from \"../actions/auth\";\r\nimport { TextField, Button, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst SetPassword = ({\r\n  set_password,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  resetState,\r\n  requestFail,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n    current_password: \"\",\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n\r\n  const { new_password, re_new_password, current_password } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_password(new_password, re_new_password, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      {requestSent ? <LinearProgress /> : \"\"}\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"رمز عبور جدید\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"تکرار رمز جدید\"\r\n            name=\"re_new_password\"\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"رمز عبور فعلی\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_password, resetState })(\r\n  SetPassword\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\components\\Popup.js",[],"F:\\react-projects\\sakar\\frontend\\src\\containers\\SetUserDetail.js",["223"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, TextField, LinearProgress } from \"@material-ui/core\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { set_user_detail, resetState } from \"../actions/auth\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nconst SetUserDetail = ({\r\n  propsid,\r\n  propsname,\r\n  propsphone_no,\r\n  propsaccount_no,\r\n  propsbirth_date,\r\n  propsid_code,\r\n  setOpenPopup,\r\n  set_user_detail,\r\n  resetState,\r\n  requestSuccess,\r\n  requestFail,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    id: propsid,\r\n    name: propsname,\r\n    phone_no: propsphone_no,\r\n    account_no: propsaccount_no,\r\n    birth_date: propsbirth_date,\r\n    id_code: propsid_code,\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n\r\n  const { id, name, phone_no, account_no, birth_date, id_code } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_user_detail(id, name, account_no, phone_no, birth_date, id_code);\r\n    setRequestSent(true);\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      {requestSent ? <LinearProgress /> : \"\"}\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"نام و نام خانوادگی\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"تلفن\"\r\n            name=\"phone_no\"\r\n            value={phone_no}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"شماره کارت\"\r\n            name=\"account_no\"\r\n            value={account_no}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div style={{ marginTop: 5 }}>\r\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n            <DatePicker\r\n              name=\"birth_date\"\r\n              okLabel=\"تأیید\"\r\n              label=\"تاریخ تولد\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={birth_date}\r\n              onChange={(date) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  birth_date: date.toISOString().split(\"T\")[0],\r\n                })\r\n              }\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"کد ملی\"\r\n            name=\"id_code\"\r\n            value={id_code}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_user_detail, resetState })(\r\n  SetUserDetail\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\Bookmark.js",["224"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_bookmark } from \"../actions/auth\";\r\nimport { bookmark } from \"../actions/shop\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\nconst Bookmark = ({ load_bookmark, bookmarkList, bookmark }) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_bookmark(localStorage.getItem(\"id\"));\r\n      } catch (err) {}\r\n    };\r\n    if (localStorage.getItem(\"id\")) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n  const classes = useStyles();\r\n  const BookmarkHandle = (id) => {\r\n    bookmark(id);\r\n  };\r\n  return bookmarkList ? (\r\n    <div className={classes.pageContainer}>\r\n      <Grid container spacing={1}>\r\n        {bookmarkList.map((bookmark) => (\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Card variant=\"outlined\">\r\n              <CardActionArea\r\n                style={{ display: \"flex\" }}\r\n                href={`/detail/${bookmark.item}`}\r\n              >\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  style={{ width: 140, height:140 }}\r\n                  image={bookmark.image}\r\n                />\r\n                <CardContent\r\n                  style={{\r\n                    flex: \"1 0 auto\",\r\n                  }}\r\n                >\r\n                  <Typography gutterBottom variant=\"h5\">\r\n                    {bookmark.item_title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    قیمت : {bookmark.item_price.toLocaleString()} تومان\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={() => BookmarkHandle(bookmark.item)}\r\n                >\r\n                  <DeleteOutline />\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  bookmarkList: state.auth.bookmarks,\r\n});\r\nexport default connect(mapStateToProps, { load_bookmark, bookmark })(Bookmark);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetAddress.js",["225"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_address, resetState } from \"../actions/auth\";\r\nimport { TextField, Button, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst SetAddress = ({\r\n  set_address,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n  pid,\r\n  pname,\r\n  paddress,\r\n  pzip_code,\r\n  pphone,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    id: pid,\r\n    address: paddress,\r\n    name: pname,\r\n    zip_code: pzip_code,\r\n    phone: pphone,\r\n  });\r\n\r\n  const { id, name, address, zip_code, phone } = formData;\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_address(id, name, address, zip_code, phone);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      {requestSent ? <LinearProgress /> : \"\"}\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"آدرس\"\r\n            name=\"address\"\r\n            value={address}\r\n            multiline\r\n            rows={4}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"نام\"\r\n            name=\"name\"\r\n            value={name}\r\n            multiline\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"کد پستی\"\r\n            name=\"zip_code\"\r\n            value={zip_code}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"تلفن\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_address, resetState })(\r\n  SetAddress\r\n);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\SetComment.js",["226"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState, comment } from \"../actions/auth\";\r\nimport { TextField, Button, LinearProgress } from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\nconst SetComment = ({\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n  id,\r\n  comment,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    item: id,\r\n    star: 5,\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const { item, star, title, description } = formData;\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    comment(item, star, title, description);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      {requestSent ? <LinearProgress /> : \"\"}\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div style={{ marginTop: 5 }}>\r\n          <Rating name=\"star\" value={star} onChange={(e) => onChange(e)} />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"عنوان\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 5 }}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"نظر\"\r\n            name=\"description\"\r\n            value={description}\r\n            multiline\r\n            rows={4}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { resetState, comment })(SetComment);\r\n","F:\\react-projects\\sakar\\frontend\\src\\containers\\OrderSteps.js",["227"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n  Button,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport Cart from \"../containers/Cart\";\r\nimport Addresses from \"../containers/Addresses\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"سبد خرید\", \"انتخاب آدرس\", \"پرداخت\"];\r\n}\r\nfunction ProfileComponent({ step }) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Cart />;\r\n    case 1:\r\n      return <Addresses />;\r\n    case 2:\r\n      return <h1>payment page</h1>;\r\n  }\r\n}\r\nexport default function OrderSteps() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card variant=\"outlined\">\r\n        <div>\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            className={classes.button}\r\n          >\r\n            برگشت\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleNext}\r\n            className={classes.button}\r\n          >\r\n            {activeStep === steps.length - 1 ? \"پرداخت\" : \"ادامه\"}\r\n          </Button>\r\n        </div>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel >{label}</StepLabel>\r\n              <StepContent>\r\n                <ProfileComponent step={index} />\r\n              </StepContent>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":23,"column":6,"nodeType":"234","endLine":23,"endColumn":35,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":42,"column":9,"nodeType":"238","endLine":42,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":41,"column":6,"nodeType":"234","endLine":41,"endColumn":36,"suggestions":"239"},{"ruleId":"232","severity":1,"message":"233","line":46,"column":6,"nodeType":"234","endLine":46,"endColumn":35,"suggestions":"240"},{"ruleId":"232","severity":1,"message":"241","line":48,"column":6,"nodeType":"234","endLine":48,"endColumn":14,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":183,"column":17,"nodeType":"245","messageId":"246","endLine":183,"endColumn":19},{"ruleId":"232","severity":1,"message":"233","line":31,"column":6,"nodeType":"234","endLine":31,"endColumn":35,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"233","line":30,"column":6,"nodeType":"234","endLine":30,"endColumn":35,"suggestions":"248"},{"ruleId":"232","severity":1,"message":"249","line":78,"column":6,"nodeType":"234","endLine":78,"endColumn":8,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"244","line":125,"column":43,"nodeType":"245","messageId":"246","endLine":125,"endColumn":45},{"ruleId":"232","severity":1,"message":"251","line":26,"column":6,"nodeType":"234","endLine":26,"endColumn":8,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":52,"column":13,"nodeType":"255","messageId":"256","endLine":52,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":229,"column":15,"nodeType":"255","messageId":"256","endLine":229,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":262,"column":13,"nodeType":"255","messageId":"256","endLine":262,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":519,"column":15,"nodeType":"255","messageId":"256","endLine":519,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":553,"column":15,"nodeType":"255","messageId":"256","endLine":553,"endColumn":18},{"ruleId":"253","severity":1,"message":"257","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":24},{"ruleId":"228","replacedBy":"258"},{"ruleId":"230","replacedBy":"259"},{"ruleId":"253","severity":1,"message":"260","line":18,"column":16,"nodeType":"255","messageId":"256","endLine":18,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":179,"column":13,"nodeType":"263","endLine":179,"endColumn":54},{"ruleId":"253","severity":1,"message":"264","line":22,"column":3,"nodeType":"255","messageId":"256","endLine":22,"endColumn":24},{"ruleId":"253","severity":1,"message":"265","line":27,"column":3,"nodeType":"255","messageId":"256","endLine":27,"endColumn":20},{"ruleId":"253","severity":1,"message":"266","line":28,"column":3,"nodeType":"255","messageId":"256","endLine":28,"endColumn":21},{"ruleId":"267","severity":1,"message":"268","line":47,"column":1,"nodeType":"269","endLine":216,"endColumn":2},{"ruleId":"228","replacedBy":"270"},{"ruleId":"230","replacedBy":"271"},{"ruleId":"253","severity":1,"message":"272","line":18,"column":3,"nodeType":"255","messageId":"256","endLine":18,"endColumn":21},{"ruleId":"267","severity":1,"message":"268","line":25,"column":1,"nodeType":"269","endLine":86,"endColumn":2},{"ruleId":"232","severity":1,"message":"273","line":27,"column":6,"nodeType":"234","endLine":27,"endColumn":8,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":37,"column":5,"nodeType":"277","messageId":"278","endLine":54,"endColumn":6},{"ruleId":"253","severity":1,"message":"279","line":6,"column":3,"nodeType":"255","messageId":"256","endLine":6,"endColumn":7},{"ruleId":"232","severity":1,"message":"280","line":35,"column":6,"nodeType":"234","endLine":35,"endColumn":8,"suggestions":"281"},{"ruleId":"232","severity":1,"message":"282","line":52,"column":6,"nodeType":"234","endLine":52,"endColumn":8,"suggestions":"283"},{"ruleId":"253","severity":1,"message":"284","line":60,"column":9,"nodeType":"255","messageId":"256","endLine":60,"endColumn":29},{"ruleId":"232","severity":1,"message":"285","line":30,"column":6,"nodeType":"234","endLine":30,"endColumn":35,"suggestions":"286"},{"ruleId":"232","severity":1,"message":"285","line":30,"column":6,"nodeType":"234","endLine":30,"endColumn":35,"suggestions":"287"},{"ruleId":"232","severity":1,"message":"285","line":43,"column":6,"nodeType":"234","endLine":43,"endColumn":35,"suggestions":"288"},{"ruleId":"232","severity":1,"message":"289","line":33,"column":6,"nodeType":"234","endLine":33,"endColumn":8,"suggestions":"290"},{"ruleId":"232","severity":1,"message":"285","line":37,"column":6,"nodeType":"234","endLine":37,"endColumn":35,"suggestions":"291"},{"ruleId":"232","severity":1,"message":"285","line":33,"column":6,"nodeType":"234","endLine":33,"endColumn":35,"suggestions":"292"},{"ruleId":"275","severity":1,"message":"276","line":28,"column":3,"nodeType":"277","messageId":"278","endLine":35,"endColumn":4},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetState'. Either include it or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["295"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["296"],["297"],"React Hook useEffect has missing dependencies: 'fetchData' and 'page'. Either include them or remove the dependency array.",["298"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["299"],["300"],"React Hook useEffect has missing dependencies: 'itemId' and 'load_item'. Either include them or remove the dependency array. If 'load_item' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["301"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["302"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'NavigateNextIcon' is defined but never used.",["293"],["294"],"'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LOAD_USER_DETAIL_FAIL' is defined but never used.","'LOAD_ADDRESS_FAIL' is defined but never used.","'LOAD_BOOKMARK_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["293"],["294"],"'LOAD_COMMENTS_FAIL' is defined but never used.","React Hook useEffect has a missing dependency: 'load_user_detail'. Either include it or remove the dependency array. If 'load_user_detail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["303"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'load_address'. Either include it or remove the dependency array. If 'load_address' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["304"],"React Hook useEffect has a missing dependency: 'load_cart'. Either include it or remove the dependency array. If 'load_cart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["305"],"'RemoveFromCartHandle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'resetState' and 'setOpenPopup'. Either include them or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["306"],["307"],["308"],"React Hook useEffect has a missing dependency: 'load_bookmark'. Either include it or remove the dependency array. If 'load_bookmark' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["309"],["310"],["311"],"no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"312","fix":"316"},{"desc":"317","fix":"318"},{"desc":"312","fix":"319"},{"desc":"312","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"331","fix":"334"},{"desc":"335","fix":"336"},{"desc":"331","fix":"337"},{"desc":"331","fix":"338"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState]",{"range":"339","text":"340"},"Update the dependencies array to be: [requestFail, isAuthenticated, resetState]",{"range":"341","text":"342"},{"range":"343","text":"340"},"Update the dependencies array to be: [fetchData, page, search]",{"range":"344","text":"345"},{"range":"346","text":"340"},{"range":"347","text":"340"},"Update the dependencies array to be: [itemId, load_item]",{"range":"348","text":"349"},"Update the dependencies array to be: [props]",{"range":"350","text":"351"},"Update the dependencies array to be: [load_user_detail]",{"range":"352","text":"353"},"Update the dependencies array to be: [load_address]",{"range":"354","text":"355"},"Update the dependencies array to be: [load_cart]",{"range":"356","text":"357"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState, setOpenPopup]",{"range":"358","text":"359"},{"range":"360","text":"359"},{"range":"361","text":"359"},"Update the dependencies array to be: [load_bookmark]",{"range":"362","text":"363"},{"range":"364","text":"359"},{"range":"365","text":"359"},[569,598],"[requestFail, requestSuccess, resetState]",[864,894],"[requestFail, isAuthenticated, resetState]",[979,1008],[1288,1296],"[fetchData, page, search]",[697,726],[766,795],[1909,1911],"[itemId, load_item]",[905,907],"[props]",[721,723],"[load_user_detail]",[888,890],"[load_address]",[1098,1100],"[load_cart]",[777,806],"[requestFail, requestSuccess, resetState, setOpenPopup]",[798,827],[1239,1268],[828,830],"[load_bookmark]",[864,893],[812,841]]